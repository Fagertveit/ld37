{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e6c961a0e9b0da9d8103","webpack:///./src/index.ts","webpack:///../gamesaw-ts/src/index.ts","webpack:///../gamesaw-ts/src/geometry/index.ts","webpack:///../gamesaw-ts/src/geometry/geometry.ts","webpack:///../gamesaw-ts/src/geometry/vector2d.ts","webpack:///../gamesaw-ts/src/utility/utility.ts","webpack:///../gamesaw-ts/src/geometry/vector3d.ts","webpack:///../gamesaw-ts/src/geometry/point.ts","webpack:///../gamesaw-ts/src/geometry/line.ts","webpack:///../gamesaw-ts/src/geometry/circle.ts","webpack:///../gamesaw-ts/src/geometry/rectangle.ts","webpack:///../gamesaw-ts/src/geometry/aabb.ts","webpack:///../gamesaw-ts/src/geometry/polygon.ts","webpack:///../gamesaw-ts/src/geometry/bezier.ts","webpack:///../gamesaw-ts/src/geometry/bspline.ts","webpack:///../gamesaw-ts/src/geometry/renderer.ts","webpack:///../gamesaw-ts/src/geometry/collision.ts","webpack:///../gamesaw-ts/src/graphics/index.ts","webpack:///../gamesaw-ts/src/graphics/color.ts","webpack:///../gamesaw-ts/src/graphics/surface2d.ts","webpack:///../gamesaw-ts/src/graphics/surface.abstract.ts","webpack:///../gamesaw-ts/src/gamesaw.ts","webpack:///../gamesaw-ts/src/graphics/surface3d.ts","webpack:///../gamesaw-ts/src/graphics/sprite.ts","webpack:///../gamesaw-ts/src/utility/index.ts","webpack:///../gamesaw-ts/src/utility/angle.ts","webpack:///../gamesaw-ts/src/utility/http.ts","webpack:///../gamesaw-ts/src/utility/resource-manager.ts","webpack:///../gamesaw-ts/src/input/index.ts","webpack:///../gamesaw-ts/src/input/mouse.ts","webpack:///../gamesaw-ts/src/input/keyboard.ts","webpack:///../gamesaw-ts/src/input/touch.ts","webpack:///../gamesaw-ts/src/input/controller.ts","webpack:///../gamesaw-ts/src/gl/index.ts","webpack:///../gamesaw-ts/src/gl/renderer2d/index.ts","webpack:///../gamesaw-ts/src/gl/renderer2d/renderer2d.ts","webpack:///../gamesaw-ts/src/gl/shader/program.ts","webpack:///../gamesaw-ts/src/gl/renderer2d/render-call.ts","webpack:///../gamesaw-ts/src/gl/renderer2d/framebuffer.ts","webpack:///../gamesaw-ts/src/gl/shader/index.ts","webpack:///../gamesaw-ts/src/gl/shader/shader-manager.ts","webpack:///../gamesaw-ts/src/gl/particle/index.ts","webpack:///../gamesaw-ts/src/gl/particle/particle.ts","webpack:///../gamesaw-ts/src/gl/particle/particle-emitter.ts","webpack:///../gamesaw-ts/src/gl/particle/particle-system.ts","webpack:///../gamesaw-ts/src/gl/particle/particle-renderer.ts","webpack:///../gamesaw-ts/src/gl/font/index.ts","webpack:///../gamesaw-ts/src/gl/font/font.ts","webpack:///../gamesaw-ts/src/gl/texture.ts","webpack:///../gamesaw-ts/src/gl/font/bitmap-font.ts","webpack:///../gamesaw-ts/src/gl/font/font-renderer.ts","webpack:///../gamesaw-ts/src/gl/tilemap/index.ts","webpack:///../gamesaw-ts/src/gl/tilemap/tilemap.ts","webpack:///../gamesaw-ts/src/gl/tilemap/tilemap-layer.ts","webpack:///../gamesaw-ts/src/gl/tilemap/tileset.ts","webpack:///../gamesaw-ts/src/gl/tilemap/tile.ts","webpack:///../gamesaw-ts/src/gl/fx/index.ts","webpack:///../gamesaw-ts/src/gl/fx/blur.ts","webpack:///../gamesaw-ts/src/gl/fx/bloom.ts","webpack:///../gamesaw-ts/src/gl/sprite.ts","webpack:///../gamesaw-ts/src/gl/animated-sprite.ts","webpack:///../gamesaw-ts/src/audio/index.ts","webpack:///../gamesaw-ts/src/audio/sample.ts","webpack:///../gamesaw-ts/src/audio/track.ts","webpack:///../gamesaw-ts/src/ai/index.ts","webpack:///../gamesaw-ts/src/ai/astar/index.ts","webpack:///../gamesaw-ts/src/ai/astar/connection.ts","webpack:///../gamesaw-ts/src/ai/astar/graph.ts","webpack:///../gamesaw-ts/src/ai/astar/heuristic.ts","webpack:///../gamesaw-ts/src/ai/astar/node-list.ts","webpack:///../gamesaw-ts/src/ai/astar/node-record.ts","webpack:///../gamesaw-ts/src/ai/astar/node.ts","webpack:///../gamesaw-ts/src/ai/astar/path-finder.ts","webpack:///../gamesaw-ts/src/scene.ts","webpack:///../gamesaw-ts/src/application.ts","webpack:///../gamesaw-ts/src/scene-manager.ts"],"names":[],"mappings":"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C,CAAC,CAAC;iBACpB,KAAK,CAAC;qBACF,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,KAAK,CAAC;iBACV,KAAK,CAAC;qBACF,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,KAAK,CAAC;iBACV,KAAK,CAAC;qBACF,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,KAAK,CAAC;iBACV,KAAK,CAAC;qBACF,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,KAAK,CAAC;iBACV,KAAK,CAAC;qBACF,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,KAAK,CAAC;iBACV,KAAK,CAAC;qBACF,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;qBACtB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,G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","file":"ld37.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ld37\"] = factory();\n\telse\n\t\troot[\"ld37\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e6c961a0e9b0da9d8103","import * as gamesaw from '../../gamesaw-ts/src/index';\r\n\r\nexport class Game {\r\n    private gl: WebGLRenderingContext;\r\n    private application: gamesaw.Application;\r\n    private menuScene: gamesaw.Scene;\r\n    public width: number = 800;\r\n    public height: number = 600;\r\n    public targetFps: number = 10;\r\n    public renderer: gamesaw.GL.Render2d.Renderer2d;\r\n    public backgroundColor: gamesaw.Graphics.Color = new gamesaw.Graphics.Color(50, 50, 50);\r\n    public backgroundTexture: gamesaw.GL.Texture;\r\n    public backgroundSprite: gamesaw.GL.Sprite;\r\n\r\n    constructor() {\r\n        let that = this;\r\n        this.application = new gamesaw.Application(this.width, this.height, this.targetFps);\r\n        this.menuScene = this.application.sceneManager.addScene('menu');\r\n        this.menuScene.add3dSurface('main');\r\n\r\n        this.menuScene.render = (delta: number) => {\r\n            that.render(delta);\r\n        };\r\n\r\n        this.menuScene.update = (delta: number) => {\r\n            that.update(delta);\r\n        };\r\n\r\n        this.gl = this.menuScene.getContext('main') as WebGLRenderingContext;\r\n        let bgCol = this.backgroundColor.getRGBAFloat();\r\n        this.gl.clearColor(bgCol[0], bgCol[1], bgCol[2], 1);\r\n\r\n        this.renderer = new gamesaw.GL.Render2d.Renderer2d(this.gl);\r\n\r\n        this.backgroundTexture = new gamesaw.GL.Texture(this.gl, '../assets/img/texture.png');\r\n        this.backgroundTexture.width = 2048;\r\n        this.backgroundTexture.height = 2048;\r\n        this.backgroundSprite = new gamesaw.GL.Sprite(this.backgroundTexture, 400, 300, [0, 0, 400, 300]);\r\n\r\n        this.application.init();\r\n    }\r\n\r\n    public update(delta: number) {\r\n\r\n    }\r\n\r\n    public render(delta: number) {\r\n        this.menuScene.clear('main');\r\n\r\n        this.backgroundSprite.renderScale(this.renderer, 0, 0, 2);\r\n\r\n        this.renderer.execute();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/index.ts","import * as Geometry from './geometry/index';\r\nimport * as Graphics from './graphics/index';\r\nimport * as Utility from './utility/index';\r\nimport * as Input from './input/index';\r\nimport * as GL from './gl/index';\r\nimport * as Audio from './audio/index';\r\nimport * as AI from './ai/index';\r\n\r\nimport { Scene } from './scene';\r\nimport { Application } from './application';\r\nimport { SceneManager } from './scene-manager';\r\n\r\nexport { Audio, Geometry, Graphics, Utility, Input, Scene, Application, SceneManager, GL, AI };\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!../gamesaw-ts/src/index.ts","import { GeometricEnum, GeometricName, GeometricObject } from './geometry';\r\nimport { Vector2 } from './vector2d';\r\nimport { Vector3 } from './vector3d';\r\nimport { Point } from './point';\r\nimport { Line } from './line';\r\nimport { Circle } from './circle';\r\nimport { Rectangle } from './rectangle';\r\nimport { AABB } from './aabb';\r\nimport { Polygon } from './polygon';\r\nimport { Bezier } from './bezier';\r\nimport { BSpline } from './bspline';\r\nimport { Renderer, render } from './renderer';\r\nimport { Collider, intersects } from './collision';\r\n\r\nexport { GeometricEnum, GeometricName, GeometricObject, Vector2, Point, Vector3,\r\n    Line, Circle, Rectangle, AABB, Polygon, Bezier, BSpline, Renderer, render, Collider, intersects }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/index.ts","export enum GeometricEnum {\r\n    POINT,\r\n    CIRCLE,\r\n    VECTOR2,\r\n    VECTOR3,\r\n    LINE,\r\n    TRIANGLE,\r\n    RECTANGLE,\r\n    AABB,\r\n    POLYGON,\r\n    BEZIER,\r\n    BSPLINE\r\n};\r\n\r\nexport const GeometricName: string[] = [\r\n    'point',\r\n    'circle',\r\n    'vector2',\r\n    'vector3',\r\n    'line',\r\n    'triangle',\r\n    'rectangle',\r\n    'aabb',\r\n    'polygon',\r\n    'bezier',\r\n    'bspline'\r\n];\r\n\r\nexport interface GeometricObject {\r\n    type: GeometricEnum;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/geometry.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { EPSILON, PI } from '../utility/utility';\r\n\r\nexport interface Vec2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Vector2 implements GeometricObject, Vec2 {\r\n    public type = GeometricEnum.VECTOR2;\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n\r\n    constructor(x: number, y: number) {\r\n        if (x) {\r\n            this.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.y = y;\r\n        }\r\n    }\r\n\r\n    public getType(): GeometricEnum {\r\n        return this.type;\r\n    }\r\n\r\n    public getX(): number {\r\n        return this.x;\r\n    }\r\n\r\n    public getY(): number {\r\n        return this.y;\r\n    }\r\n\r\n    public setX(x: number) {\r\n        this.x = x;\r\n    }\r\n\r\n    public setY(y: number) {\r\n        this.y = y;\r\n    }\r\n\r\n    public set(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public get(): Vec2 {\r\n        return this;\r\n    }\r\n\r\n    public add(v2: Vec2): Vector2 {\r\n        return new Vector2(this.x + v2.x, this.y + v2.y);\r\n    }\r\n\r\n    public sub(v2: Vec2): Vector2 {\r\n        return new Vector2(this.x - v2.x, this.y - v2.y);\r\n    }\r\n\r\n    public invert(): Vector2 {\r\n        return new Vector2(-this.x, -this.y);\r\n    }\r\n\r\n    public scale(scalar: number): Vector2 {\r\n        return new Vector2(this.x * scalar, this.y * scalar);\r\n    }\r\n\r\n    public normalize(): Vector2 {\r\n        let length = this.length();\r\n\r\n        if (length === 0) {\r\n            return new Vector2(0.0, 0.0);\r\n        }\r\n\r\n        return new Vector2(this.x / length, this.y / length);\r\n    }\r\n\r\n    public project(v2: Vec2): Vector2 {\r\n        let dot = this.dot(v2);\r\n        let length = this.lengthSquared();\r\n\r\n        return new Vector2((dot / length) * this.x, (dot / length) * this.y);\r\n    }\r\n\r\n    public length(): number {\r\n        return Math.sqrt(this.lengthSquared());\r\n    }\r\n\r\n    public lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y);\r\n    }\r\n\r\n    public dot(v2: Vec2): number {\r\n        return ((this.x * v2.x) + (this.y * v2.y));\r\n    }\r\n\r\n    public cross(v2: Vec2): number {\r\n        return ((this.x * v2.y) - (this.y * v2.x));\r\n    }\r\n\r\n    public angle(): number {\r\n        return Math.atan2(this.x, -this.y);\r\n    }\r\n\r\n    public rotate(radian: number): Vector2 {\r\n        if (this.x === 0) {\r\n            this.x += EPSILON;\r\n        }\r\n\r\n        if (this.y === 0) {\r\n            this.y += EPSILON;\r\n        }\r\n\r\n        return new Vector2(Math.cos(radian) * this.x - Math.sin(radian) * this.y,\r\n            Math.sin(radian) * this.x + Math.cos(radian) * this.y);\r\n    }\r\n\r\n    public rotatePivot(x: number, y: number, radian: number): Vector2 {\r\n        if (this.x === 0) {\r\n            this.x += EPSILON;\r\n        }\r\n\r\n        if (this.y === 0) {\r\n            this.y += EPSILON;\r\n        }\r\n\r\n        let srcX = this.x;\r\n        let srcY = this.y;\r\n\r\n        srcX -= x;\r\n        srcY -= y;\r\n\r\n        return new Vector2((Math.cos(radian) * srcX - Math.sin(radian) * srcY) + x,\r\n            (Math.sin(radian) * srcX + Math.cos(radian) * srcY) + y);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/vector2d.ts","export const PI: number = Math.PI;\r\nexport const EPSILON: number = 0.0000001;\r\n\r\nexport function capitalize(str: string): string {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/utility.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\n\r\nexport interface Vec3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\nexport class Vector3 implements GeometricObject, Vec3 {\r\n    public type = GeometricEnum.VECTOR3;\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        if (x) {\r\n            this.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.y = y;\r\n        }\r\n\r\n        if (z) {\r\n            this.z = z;\r\n        }\r\n    }\r\n\r\n    public getType(): GeometricEnum {\r\n        return this.type;\r\n    }\r\n\r\n    public getX(): number {\r\n        return this.x;\r\n    }\r\n\r\n    public getY(): number {\r\n        return this.y;\r\n    }\r\n\r\n    public getZ(): number {\r\n        return this.z;\r\n    }\r\n\r\n    public setX(x: number) {\r\n        this.x = x;\r\n    }\r\n\r\n    public setY(y: number) {\r\n        this.y = y;\r\n    }\r\n\r\n    public setZ(z: number) {\r\n        this.z = z;\r\n    }\r\n\r\n    public set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    public get(): Vec3 {\r\n        return this;\r\n    }\r\n\r\n    public add(v2: Vec3): Vector3 {\r\n        return new Vector3(this.x + v2.x, this.y + v2.y, this.z + v2.z);\r\n    }\r\n\r\n    public sub(v2: Vec3): Vector3 {\r\n        return new Vector3(this.x - v2.x, this.y - v2.y, this.z - v2.z);\r\n    }\r\n\r\n    public invert(): Vector3 {\r\n        return new Vector3(-this.x, -this.y, -this.z);\r\n    }\r\n\r\n    public scale(scalar: number): Vector3 {\r\n        return new Vector3(this.x * scalar, this.y * scalar, this.z * scalar);\r\n    }\r\n\r\n    public normalize(): Vector3 {\r\n        let length = this.length();\r\n\r\n        if (length === 0) {\r\n            return new Vector3(0.0, 0.0, 0.0);\r\n        }\r\n\r\n        return new Vector3(this.x / length, this.y / length, this.z / length);\r\n    }\r\n\r\n    public project(v2: Vec3): Vector3 {\r\n        let dot = this.dot(v2);\r\n        let length = this.lengthSquared();\r\n\r\n        return new Vector3((dot / length) * this.x, (dot / length) * this.y, (dot / length) * this.z);\r\n    }\r\n\r\n    public length(): number {\r\n        return Math.sqrt(this.lengthSquared());\r\n    }\r\n\r\n    public lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z);\r\n    }\r\n\r\n    public dot(v2: Vec3): number {\r\n        return ((this.x * v2.x) + (this.y * v2.y) + (this.z * v2.z));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/vector3d.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\n\r\ninterface Pos {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Point implements GeometricObject, Pos {\r\n    public type = GeometricEnum.POINT;\r\n    public x = 0;\r\n    public y = 0;\r\n\r\n    constructor(x: number, y: number) {\r\n        if (x) {\r\n            this.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.y = y;\r\n        }\r\n    }\r\n\r\n    public getType(): GeometricEnum {\r\n        return this.type;\r\n    }\r\n\r\n    public getX(): number {\r\n        return this.x;\r\n    }\r\n\r\n    public getY(): number {\r\n        return this.y;\r\n    }\r\n\r\n    public setX(x: number) {\r\n        this.x = x;\r\n    }\r\n\r\n    public setY(y: number) {\r\n        this.y = y;\r\n    }\r\n\r\n    public set(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public get(): Pos {\r\n        return this;\r\n    }\r\n\r\n    public transform(x: number, y: number) {\r\n        this.x += x;\r\n        this.y += y;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/point.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class Line implements GeometricObject {\r\n    public type = GeometricEnum.LINE;\r\n    public start = new Point(-1, 0);\r\n    public end = new Point(1, 0);\r\n\r\n    constructor(x0: number, y0: number, x1: number, y1: number) {\r\n        if (x0 && y0) {\r\n            this.start.set(x0, y0);\r\n        }\r\n\r\n        if (x1 && y1) {\r\n            this.end.set(x1, y1);\r\n        }\r\n    }\r\n\r\n    public transform(x: number, y: number) {\r\n        this.start.transform(x, y);\r\n        this.end.transform(x, y);\r\n    }\r\n\r\n    public transformStart(x: number, y: number) {\r\n        this.start.transform(x, y);\r\n    }\r\n\r\n    public transformEnd(x: number, y: number) {\r\n        this.end.transform(x, y);\r\n    }\r\n\r\n    public set(x0: number, y0: number, x1: number, y1: number) {\r\n        this.start.set(x0, y0);\r\n        this.end.set(x1, y1);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/line.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class Circle implements GeometricObject {\r\n    public type = GeometricEnum.CIRCLE;\r\n    public pos: Point = new Point(0, 0);\r\n    public radius: number = 1;\r\n\r\n    constructor(x: number, y: number, radius: number) {\r\n        if (x) {\r\n            this.pos.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.pos.y = y;\r\n        }\r\n\r\n        if (radius) {\r\n            this.radius = radius;\r\n        }\r\n    }\r\n\r\n    public getType(): GeometricEnum {\r\n        return this.type;\r\n    }\r\n\r\n    public getX(): number {\r\n        return this.pos.x;\r\n    }\r\n\r\n    public getY(): number {\r\n        return this.pos.y;\r\n    }\r\n\r\n    public setX(x: number) {\r\n        this.pos.x = x;\r\n    }\r\n\r\n    public setY(y: number) {\r\n        this.pos.y = y;\r\n    }\r\n\r\n    public set(x: number, y: number, radius: number) {\r\n        this.pos.x = x;\r\n        this.pos.y = y;\r\n        this.radius = radius;\r\n    }\r\n\r\n    public get(): Circle {\r\n        return this;\r\n    }\r\n\r\n    public transform(x: number, y: number) {\r\n        this.pos.x += x;\r\n        this.pos.y += y;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/circle.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class Rectangle implements GeometricObject {\r\n    public type = GeometricEnum.RECTANGLE;\r\n    public pos: Point = new Point(0, 0);\r\n    public width = 1;\r\n    public height = 1;\r\n\r\n    constructor(x: number, y: number, width: number, height: number) {\r\n        if (x) {\r\n            this.pos.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.pos.y = y;\r\n        }\r\n\r\n        if (width) {\r\n            this.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.height = height;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/rectangle.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class AABB implements GeometricObject {\r\n    public type = GeometricEnum.AABB;\r\n    public pos: Point = new Point(0, 0);\r\n    public halfWidth = 1;\r\n    public halfHeight = 1;\r\n\r\n    constructor(x: number, y: number, halfWidth: number, halfHeight: number) {\r\n        if (x && y) {\r\n            this.pos.set(x, y);\r\n        }\r\n\r\n        if (halfWidth) {\r\n            this.halfWidth = halfWidth;\r\n        }\r\n\r\n        if (halfHeight) {\r\n            this.halfHeight = halfHeight;\r\n        }\r\n    }\r\n\r\n    public setPosition(x: number, y: number) {\r\n        this.pos.set(x, y);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/aabb.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class Polygon implements GeometricObject {\r\n    public type = GeometricEnum.POLYGON;\r\n    public points: Point[] = [\r\n        new Point(0, 0),\r\n        new Point(1, -1),\r\n        new Point(-1, -1)\r\n    ];\r\n\r\n    constructor(points: Point[]) {\r\n        this.points = points;\r\n    }\r\n\r\n    public addPoint(point: Point): void {\r\n        this.points.push(point);\r\n    }\r\n\r\n    public removePoint(index: number): void {\r\n        this.points.splice(index, 1);\r\n    }\r\n\r\n    public removeFirst(): void {\r\n        this.points.shift();\r\n    }\r\n\r\n    public removeLast(): void {\r\n        this.points.pop();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/polygon.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Vector2 } from './vector2d';\r\nimport { Point } from './point';\r\n\r\nexport class Bezier implements GeometricObject {\r\n    public type = GeometricEnum.BEZIER;\r\n    public start: Vector2 = new Vector2(0.0, 0.0);\r\n    public end: Vector2 = new Vector2(1.0, 0.0);\r\n    public controlStart: Vector2 = new Vector2(0.0, 0.0);\r\n    public controlEnd: Vector2 = new Vector2(1.0, 0.0);\r\n\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        this.start.set(startX, startY);\r\n        this.controlStart.set(startX, startY);\r\n        this.end.set(endX, endY);\r\n        this.controlEnd.set(endX, endY);\r\n    }\r\n\r\n    public getPoint(t: number): Vector2 {\r\n        let point: Vector2 = new Vector2(this.start.x, this.start.y);\r\n\r\n        if (t !== 0) {\r\n            let u: number = 1 - t;\r\n            let tt: number = t * t;\r\n            let uu: number = u * u;\r\n            let uuu: number = uu * u;\r\n            let ttt: number = tt * t;\r\n\r\n            point = this.start.scale(uuu);\r\n            point = point.add(this.controlStart.scale(3 * uu * t));\r\n            point = point.add(this.controlEnd.scale(3 * u * tt));\r\n            point = point.add(this.end.scale(ttt));\r\n        }\r\n\r\n        return point;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/bezier.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Vector2 } from './vector2d';\r\n\r\nexport class BSpline implements GeometricObject {\r\n    public type = GeometricEnum.BSPLINE;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/bspline.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport {\r\n    Vector2,\r\n    Point,\r\n    Vector3,\r\n    Line,\r\n    Circle,\r\n    Rectangle,\r\n    AABB,\r\n    Polygon,\r\n    Bezier,\r\n    BSpline\r\n} from './index';\r\nimport { PI } from '../utility/utility';\r\n\r\nexport function render(ctx: CanvasRenderingContext2D, object: GeometricObject): void {\r\n    let renderer = new Renderer(ctx);\r\n    renderer.render(object);\r\n};\r\n\r\nexport class Renderer {\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    constructor(context: CanvasRenderingContext2D) {\r\n        this.context = context;\r\n    }\r\n\r\n    public render(object: GeometricObject): void {\r\n        if (!this.context) {\r\n            throw new Error('Renderer must have a context for rendering.');\r\n        }\r\n\r\n        switch (object.type) {\r\n            case GeometricEnum.POINT:\r\n                this.renderPoint(object as Point);\r\n                break;\r\n            case GeometricEnum.VECTOR2:\r\n                this.renderPoint(object as Vector2);\r\n                break;\r\n            case GeometricEnum.LINE:\r\n                this.renderLine(object as Line);\r\n                break;\r\n            case GeometricEnum.AABB:\r\n                this.renderAABB(object as AABB);\r\n            break;\r\n            case GeometricEnum.RECTANGLE:\r\n                this.renderRectangle(object as Rectangle);\r\n            break;\r\n            case GeometricEnum.CIRCLE:\r\n                this.renderCircle(object as Circle);\r\n            break;\r\n            default:\r\n                throw new Error('Not recogniced as a renderable shape.');\r\n        }\r\n    }\r\n\r\n    private renderPoint(obj: Point | Vector2): void {\r\n        this.context.beginPath();\r\n        this.context.arc(obj.x, obj.y, 1.0, 0, PI * 2);\r\n        this.context.fill();\r\n    }\r\n\r\n    private renderLine(obj: Line): void {\r\n        this.context.beginPath();\r\n        this.context.moveTo(obj.start.x, obj.start.y);\r\n        this.context.lineTo(obj.end.x, obj.end.x);\r\n        this.context.stroke();\r\n    }\r\n\r\n    private renderAABB(obj: AABB): void {\r\n        this.context.strokeRect(obj.pos.x - obj.halfWidth, obj.pos.y - obj.halfHeight, obj.halfWidth * 2, obj.halfHeight * 2);\r\n    }\r\n\r\n    private renderRectangle(obj: Rectangle): void {\r\n        this.context.strokeRect(obj.pos.x, obj.pos.y, obj.width, obj.height);\r\n    }\r\n\r\n    private renderCircle(obj: Circle): void {\r\n        this.context.beginPath();\r\n        this.context.arc(obj.pos.x, obj.pos.y, obj.radius, 0, PI * 2);\r\n        this.context.stroke();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/renderer.ts","import { GeometricEnum, GeometricName, GeometricObject } from './geometry';\r\nimport { capitalize } from '../utility/utility';\r\nimport {\r\n    Vector2,\r\n    Point,\r\n    Vector3,\r\n    Line,\r\n    Circle,\r\n    Rectangle,\r\n    AABB,\r\n    Polygon,\r\n    Bezier,\r\n    BSpline\r\n} from './index';\r\n\r\nexport function intersects(obj0: GeometricObject, obj1: GeometricObject): boolean {\r\n    let collider = new Collider();\r\n\r\n    return collider.intersects(obj0, obj1);\r\n};\r\n\r\nexport class Collider {\r\n\r\n    constructor() {}\r\n\r\n    public intersects(obj0: GeometricObject, obj1: GeometricObject): boolean {\r\n        // Need to check the first object if we can use it as main collider body\r\n        switch (obj0.type) {\r\n            case GeometricEnum.POINT:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.LINE:\r\n                return this.pointLine();\r\n                case GeometricEnum.CIRCLE:\r\n                return this.pointCircle(obj0 as Point, obj1 as Circle);\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.pointRectangle(obj0 as Point, obj1 as Rectangle);\r\n                case GeometricEnum.AABB:\r\n                return this.pointAABB(obj0 as Point, obj1 as AABB);\r\n                case GeometricEnum.POLYGON:\r\n                return this.pointPolygon();\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.LINE:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.POINT:\r\n                return this.linePoint();\r\n                case GeometricEnum.CIRCLE:\r\n                return this.lineCircle();\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.lineRectangle();\r\n                case GeometricEnum.POLYGON:\r\n                return this.linePolygon();\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.CIRCLE:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.CIRCLE:\r\n                return this.circleCircle(obj0 as Circle, obj1 as Circle);\r\n                case GeometricEnum.LINE:\r\n                return this.circleLine();\r\n                case GeometricEnum.POINT:\r\n                return this.circlePoint(obj0 as Circle, obj1 as Point);\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.circleRectangle();\r\n                case GeometricEnum.AABB:\r\n                return this.circleAABB(obj0 as Circle, obj1 as AABB);\r\n                case GeometricEnum.POLYGON:\r\n                return this.circlePolygon(obj0 as Circle, obj1 as Polygon);\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.RECTANGLE:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.rectangleRectangle(obj0 as Rectangle, obj1 as Rectangle);\r\n                case GeometricEnum.AABB:\r\n                return this.rectangleAABB(obj0 as Rectangle, obj1 as AABB);\r\n                case GeometricEnum.LINE:\r\n                return this.rectangleLine();\r\n                case GeometricEnum.CIRCLE:\r\n                return this.rectangleCircle();\r\n                case GeometricEnum.POINT:\r\n                return this.rectanglePoint(obj0 as Rectangle, obj1 as Point);\r\n                case GeometricEnum.POLYGON:\r\n                return this.rectanglePolygon();\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.POLYGON:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.POLYGON:\r\n                return this.polygonPolygon();\r\n                case GeometricEnum.LINE:\r\n                return this.polygonLine();\r\n                case GeometricEnum.CIRCLE:\r\n                return this.polygonCircle(obj0 as Polygon, obj1 as Circle);\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.polygonRectangle();\r\n                case GeometricEnum.POINT:\r\n                return this.polygonPoint();\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.AABB:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.AABB:\r\n                return this.aabbAABB(obj0 as AABB, obj1 as AABB);\r\n                case GeometricEnum.POINT:\r\n                return this.aabbPoint(obj0 as AABB, obj1 as Point);\r\n                case GeometricEnum.CIRCLE:\r\n                return this.aabbCircle(obj0 as AABB, obj1 as Circle);\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.aabbRectangle(obj0 as AABB, obj1 as Rectangle);\r\n            }\r\n            default:\r\n                throw new Error('Couldn\\'t find any collider for type');\r\n        }\r\n    }\r\n\r\n    public pointLine(): boolean {\r\n        return true;\r\n    }\r\n    public linePoint(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public pointCircle(obj0: Point, obj1: Circle): boolean {\r\n        let v0: Vector2 = new Vector2(obj0.x, obj0.y);\r\n        let v1: Vector2 = new Vector2(obj1.pos.x, obj1.pos.y);\r\n        let len: number = v1.sub(v0).length();\r\n\r\n        return len < obj1.radius;\r\n    }\r\n    public circlePoint(obj0: Circle, obj1: Point): boolean {\r\n        return this.pointCircle(obj1, obj0);\r\n    }\r\n\r\n    public pointRectangle(obj0: Point, obj1: Rectangle): boolean {\r\n        return (obj0.x > obj1.pos.x && obj0.x < obj1.pos.x + obj1.width &&\r\n                obj0.y > obj1.pos.y && obj0.y < obj1.pos.y + obj1.height);\r\n    }\r\n    public rectanglePoint(obj0: Rectangle, obj1: Point): boolean {\r\n        return this.pointRectangle(obj1, obj0);\r\n    }\r\n\r\n    public pointPolygon(): boolean {\r\n        return true;\r\n    }\r\n    public polygonPoint(): boolean {\r\n        return this.pointPolygon();\r\n    }\r\n\r\n    public lineLine(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public lineCircle(): boolean {\r\n        return true;\r\n    }\r\n    public circleLine(): boolean {\r\n        return this.lineCircle();\r\n    }\r\n\r\n    public lineRectangle(): boolean {\r\n        return true;\r\n    }\r\n    public rectangleLine(): boolean {\r\n        return this.lineRectangle();\r\n    }\r\n\r\n    public linePolygon(): boolean {\r\n        return true;\r\n    }\r\n    public polygonLine(): boolean {\r\n        return this.linePolygon();\r\n    }\r\n\r\n    public circleCircle(obj0: Circle, obj1: Circle): boolean {\r\n        let v0: Vector2 = new Vector2(obj0.pos.x, obj0.pos.y);\r\n        let v1: Vector2 = new Vector2(obj1.pos.x, obj1.pos.y);\r\n        let len: number = v1.sub(v0).length();\r\n        let cRadi: number = obj0.radius + obj1.radius;\r\n\r\n        return len < cRadi;\r\n    }\r\n\r\n    public circleRectangle(): boolean {\r\n        return true;\r\n    }\r\n    public rectangleCircle(): boolean {\r\n        return this.circleRectangle();\r\n    }\r\n\r\n    public circlePolygon(obj0: Circle, obj1: Polygon): boolean {\r\n        return true;\r\n    }\r\n    public polygonCircle(obj0: Polygon, obj1: Circle): boolean {\r\n        return this.circlePolygon(obj1, obj0);\r\n    }\r\n\r\n    public rectangleRectangle(obj0: Rectangle, obj1: Rectangle): boolean {\r\n        return (obj0.pos.x + obj0.width >= obj1.pos.x &&\r\n                obj0.pos.y + obj0.height >= obj1.pos.y &&\r\n                obj0.pos.x <= obj1.pos.x + obj1.width &&\r\n                obj0.pos.y <= obj1.pos.y + obj1.height);\r\n    }\r\n\r\n    public rectanglePolygon(): boolean {\r\n        return true;\r\n    }\r\n    public polygonRectangle(): boolean {\r\n        return this.rectanglePolygon();\r\n    }\r\n\r\n    public polygonPolygon(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public pointAABB(obj0: Point, obj1: AABB): boolean {\r\n        if (Math.abs(obj1.pos.x - obj0.x) > obj1.halfWidth) {\r\n            return false;\r\n        } else if (Math.abs(obj1.pos.y - obj0.y) > obj1.halfHeight) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    public aabbPoint(obj0: AABB, obj1: Point): boolean {\r\n        return this.pointAABB(obj1, obj0);\r\n    }\r\n\r\n    public circleAABB(obj0: Circle, obj1: AABB): boolean {\r\n        if (Math.abs(obj1.pos.x - obj0.pos.x) > (obj1.halfWidth + obj0.radius)) {\r\n            return false;\r\n        } else if (Math.abs(obj1.pos.y - obj0.pos.y) > (obj1.halfHeight + obj0.radius)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    public aabbCircle(obj0: AABB, obj1: Circle): boolean {\r\n        return this.circleAABB(obj1, obj0);\r\n    }\r\n\r\n    public rectangleAABB(obj0: Rectangle, obj1: AABB): boolean {\r\n        let halfWidth: number = obj0.width / 2;\r\n        let halfHeight: number = obj0.height / 2;\r\n\r\n        if (Math.abs(obj0.pos.x + halfWidth - obj1.pos.x) > (halfWidth + obj1.halfWidth)) {\r\n            return false;\r\n        } else if (Math.abs(obj0.pos.y + halfHeight - obj1.pos.y) > (halfHeight + obj1.halfHeight)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    public aabbRectangle(obj0: AABB, obj1: Rectangle): boolean {\r\n        return this.rectangleAABB(obj1, obj0);\r\n    }\r\n\r\n    public aabbAABB(obj0: AABB, obj1: AABB): boolean {\r\n        if (Math.abs(obj0.pos.x - obj1.pos.x) > (obj0.halfWidth + obj1.halfWidth)) {\r\n            return false;\r\n        } else if (Math.abs(obj0.pos.y - obj1.pos.y) > (obj0.halfHeight + obj1.halfHeight)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/collision.ts","import { Color } from './color';\r\nimport { Surface2d } from './surface2d';\r\nimport { Surface3d } from './surface3d';\r\nimport { Sprite } from './sprite';\r\n\r\nexport { Color, Surface2d, Surface3d, Sprite }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/index.ts","export enum RGBA {\r\n    RED,\r\n    GREEN,\r\n    BLUE,\r\n    ALPHA\r\n}\r\n\r\nexport enum HSLA {\r\n    HUE,\r\n    SATURATION,\r\n    LUMINOSITY,\r\n    ALPHA\r\n}\r\n\r\nexport interface RGB {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n}\r\n\r\nexport interface HSL {\r\n    h: number;\r\n    s: number;\r\n    l: number;\r\n}\r\n\r\nexport class Color {\r\n    public rgb: number[] = [\r\n        255,\r\n        255,\r\n        255\r\n    ];\r\n    public hsl: number[] = [\r\n        360,\r\n        100,\r\n        100\r\n    ];\r\n    public alpha: number = 1;\r\n\r\n    constructor(red?: number, green?: number, blue?: number, alpha?: number) {\r\n        if (red && green && blue) {\r\n            this.rgb[RGBA.RED] = red;\r\n            this.rgb[RGBA.GREEN] = green;\r\n            this.rgb[RGBA.BLUE] = blue;\r\n            this.RGBtoHSL();\r\n        }\r\n\r\n        if (alpha) {\r\n            this.alpha = alpha;\r\n        }\r\n    }\r\n\r\n    public setRGB(red: number, green: number, blue: number): void {\r\n        this.rgb[RGBA.RED] = red;\r\n        this.rgb[RGBA.GREEN] = green;\r\n        this.rgb[RGBA.BLUE] = blue;\r\n        this.RGBtoHSL();\r\n    }\r\n\r\n    public setHSL(hue: number, saturation: number, luminosity: number): void {\r\n        this.hsl[HSLA.HUE] = hue;\r\n        this.hsl[HSLA.SATURATION] = saturation;\r\n        this.hsl[HSLA.LUMINOSITY] = luminosity;\r\n        this.HSLtoRGB();\r\n    }\r\n\r\n    public setAlpha(alpha: number): void {\r\n        this.alpha = alpha;\r\n    }\r\n\r\n    public getRGB(): RGB {\r\n        return { r: this.rgb[RGBA.RED], g: this.rgb[RGBA.GREEN], b: this.rgb[RGBA.BLUE] };\r\n    }\r\n\r\n    public getHSL(): HSL {\r\n        return { h: this.hsl[HSLA.HUE], s: this.hsl[HSLA.SATURATION], l: this.hsl[HSLA.LUMINOSITY] };\r\n    }\r\n\r\n    public getAlpha(): number {\r\n        return this.alpha;\r\n    }\r\n\r\n    public getRGBAFloat(): number[] {\r\n        return [ this.toFloat(this.rgb[RGBA.RED]), this.toFloat(this.rgb[RGBA.GREEN]), this.toFloat(this.rgb[RGBA.BLUE]), this.alpha ];\r\n    }\r\n\r\n    public RGBtoHSL(): void {\r\n        let r: number = this.rgb[RGBA.RED];\r\n        let g: number = this.rgb[RGBA.GREEN];\r\n        let b: number = this.rgb[RGBA.BLUE];\r\n        let h: number;\r\n        let s: number;\r\n        let l: number;\r\n\r\n        let cmax: number = (r > g) ? r : g;\r\n\r\n        if (b > cmax) {\r\n            cmax = b;\r\n        }\r\n\r\n        let cmin: number = (r < g) ? r : g;\r\n\r\n        if (b < cmin) {\r\n            cmin = b;\r\n        }\r\n\r\n        l = cmax / 255.0;\r\n\r\n        if (cmax !== 0) {\r\n            s = (cmax - cmin) / cmax;\r\n        } else {\r\n            s = 0;\r\n        }\r\n\r\n        if (s === 0) {\r\n            h = 0;\r\n        } else {\r\n            let redc: number = (cmax - r) / (cmax - cmin);\r\n            let greenc: number = (cmax - g) / (cmax - cmin);\r\n            let bluec: number = (cmax - b) / (cmax - cmin);\r\n\r\n            if (r === cmax) {\r\n                h = bluec - greenc;\r\n            } else if (g === cmax) {\r\n                h = 2.0 + redc - bluec;\r\n            } else {\r\n                h = 4.0 + greenc - redc;\r\n            }\r\n\r\n            h = h / 6.0;\r\n\r\n            if (h < 0) {\r\n                h = h + 1.0;\r\n            }\r\n        }\r\n\r\n        this.hsl[HSLA.HUE] = h;\r\n        this.hsl[HSLA.SATURATION] = s;\r\n        this.hsl[HSLA.LUMINOSITY] = l;\r\n    }\r\n\r\n    public HSLtoRGB(): void {\r\n        let r: number = 0;\r\n        let g: number = 0;\r\n        let b: number = 0;\r\n        let hue: number = this.hsl[HSLA.HUE];\r\n        let s: number = this.hsl[HSLA.SATURATION];\r\n        let l: number = this.hsl[HSLA.LUMINOSITY];\r\n\r\n        if (this.hsl[HSLA.SATURATION] === 0) {\r\n            r = Math.floor(l * 255 + 0.5);\r\n            g = Math.floor(l * 255 + 0.5);\r\n            b = Math.floor(l * 255 + 0.5);\r\n        } else {\r\n            let h: number = (hue - Math.floor(hue)) * 6.0;\r\n            let f: number = h - Math.floor(h);\r\n            let p: number = l * (1.0 - s);\r\n            let q: number = l * (1.0 - s * f);\r\n            let t: number = l * (1.0 - (s * (1.0 - f)));\r\n\r\n            switch (Math.floor(h)) {\r\n                case 0:\r\n                    r = (l * 255.0 + 0.5);\r\n                    g = (t * 255.0 + 0.5);\r\n                    b = (p * 255.0 + 0.5);\r\n                    break;\r\n                case 1:\r\n                    r = (q * 255.0 + 0.5);\r\n                    g = (l * 255.0 + 0.5);\r\n                    b = (p * 255.0 + 0.5);\r\n                    break;\r\n                case 2:\r\n                    r = (p * 255.0 + 0.5);\r\n                    g = (l * 255.0 + 0.5);\r\n                    b = (t * 255.0 + 0.5);\r\n                    break;\r\n                case 3:\r\n                    r = (p * 255.0 + 0.5);\r\n                    g = (q * 255.0 + 0.5);\r\n                    b = (l * 255.0 + 0.5);\r\n                    break;\r\n                case 4:\r\n                    r = (t * 255.0 + 0.5);\r\n                    g = (p * 255.0 + 0.5);\r\n                    b = (l * 255.0 + 0.5);\r\n                    break;\r\n                case 5:\r\n                    r = (l * 255.0 + 0.5);\r\n                    g = (p * 255.0 + 0.5);\r\n                    b = (q * 255.0 + 0.5);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.rgb[RGBA.RED] = Math.floor(r);\r\n        this.rgb[RGBA.GREEN] = Math.floor(g);\r\n        this.rgb[RGBA.BLUE] = Math.floor(b);\r\n    }\r\n\r\n    public getHex(): string {\r\n        return '#' + ((1 << 24) + (this.rgb[RGBA.RED] << 16) + (this.rgb[RGBA.GREEN] << 8) + this.rgb[RGBA.BLUE]).toString(16).slice(1);\r\n    }\r\n\r\n    public setHex(hex: string): void {\r\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n        this.rgb[RGBA.RED] = parseInt(result[RGBA.RED], 16);\r\n        this.rgb[RGBA.GREEN] = parseInt(result[RGBA.GREEN], 16);\r\n        this.rgb[RGBA.BLUE] = parseInt(result[RGBA.BLUE], 16);\r\n    }\r\n\r\n    private toFloat(int: number): number {\r\n        if (int === 0) {\r\n            return 0.0;\r\n        }\r\n\r\n        return int / 255;\r\n    }\r\n\r\n    private toInt(float: number): number {\r\n        return float * 255;\r\n    }\r\n\r\n    public interpolate(c1: Color, c2: Color, scale: number): Color {\r\n        let color = new Color();\r\n        let col0 = c1.getRGBAFloat();\r\n        let col1 = c2.getRGBAFloat();\r\n\r\n        color.rgb[RGBA.RED] = this.toInt(col0[RGBA.RED] + (col1[RGBA.RED] - col0[RGBA.RED]) * scale);\r\n        color.rgb[RGBA.GREEN] = this.toInt(col0[RGBA.GREEN] + (col1[RGBA.GREEN] - col0[RGBA.GREEN]) * scale);\r\n        color.rgb[RGBA.BLUE] = this.toInt(col0[RGBA.BLUE] + (col1[RGBA.BLUE] - col0[RGBA.BLUE]) * scale);\r\n        color.alpha = this.toInt(col0[RGBA.ALPHA] + (col1[RGBA.ALPHA] - col0[RGBA.ALPHA]) * scale);\r\n        color.RGBtoHSL();\r\n\r\n        return color;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/color.ts","import { Surface } from './surface.abstract';\r\nimport { Color } from './color';\r\n\r\nexport class Surface2d extends Surface {\r\n    public width: number = 640;\r\n    public height: number = 480;\r\n    public id: string = 'canvas-2d';\r\n    public canvas: HTMLCanvasElement;\r\n    public clearColor: Color = new Color(0, 0, 0, 1);\r\n\r\n    constructor(width: number, height: number, id: string) {\r\n        super();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.id = id;\r\n\r\n        this.createCanvas();\r\n    }\r\n\r\n    public clear(color?: Color): void {\r\n        if (color) {\r\n            this.clearColor = color;\r\n        }\r\n\r\n        let ctx = this.getContext();\r\n\r\n        ctx.clearRect(0, 0, this.width, this.height);\r\n\r\n        if (color) {\r\n            ctx.save();\r\n            ctx.fillStyle = color.getHex();\r\n            ctx.fillRect(0, 0, this.width, this.height);\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    public getContext(): CanvasRenderingContext2D {\r\n        return this.canvas.getContext('2d');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/surface2d.ts","import { Color } from './color';\r\nimport { CONTAINER_ID } from '../gamesaw';\r\n\r\nexport abstract class Surface {\r\n    public abstract width: number;\r\n    public abstract height: number;\r\n    public abstract id: string;\r\n    public abstract canvas: HTMLCanvasElement;\r\n\r\n    public constructor() { }\r\n\r\n    public createCanvas(): void {\r\n        let container = document.getElementById(CONTAINER_ID);\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.setAttribute('id', this.id);\r\n        this.canvas.setAttribute('width', String(this.width));\r\n        this.canvas.setAttribute('height', String(this.height));\r\n\r\n        this.canvas.style.position = 'absolute';\r\n\r\n        container.appendChild(this.canvas);\r\n    };\r\n\r\n    public abstract clear(color: Color): void;\r\n\r\n    public toDataUrl(): string {\r\n        return this.canvas.toDataURL('image/png');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/surface.abstract.ts","export const CONTAINER_ID: string = 'gamesaw-container';\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gamesaw.ts","import { Surface } from './surface.abstract';\r\nimport { Color } from './color';\r\n\r\nexport class Surface3d extends Surface {\r\n    public gl: WebGLRenderingContext;\r\n    public width: number;\r\n    public height: number;\r\n    public id: string;\r\n    public clearColor: Color = new Color(0, 0, 0, 1);\r\n    public canvas: HTMLCanvasElement;\r\n\r\n    constructor(width: number, height: number, id: string) {\r\n        super();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.id = id;\r\n\r\n        this.createCanvas();\r\n        this.init();\r\n    }\r\n\r\n    private init(): void {\r\n        this.gl = this.getContext();\r\n\r\n        let colorFloats = this.clearColor.getRGBAFloat();\r\n        this.gl.clearColor(colorFloats[0], colorFloats[1], colorFloats[2], colorFloats[3]);\r\n    }\r\n\r\n    public clear(color?: Color): void {\r\n        let gl = this.gl;\r\n        if (color) {\r\n            this.clearColor = color;\r\n            let colorFloats = this.clearColor.getRGBAFloat();\r\n            gl.clearColor(colorFloats[0], colorFloats[1], colorFloats[2], colorFloats[3]);\r\n        }\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    }\r\n\r\n    public getContext(): WebGLRenderingContext {\r\n        return this.canvas.getContext('webgl', { preserveDrawingBuffer: true }) ||\r\n            this.canvas.getContext('experimental-webgl', { preserveDrawingBuffer: true });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/surface3d.ts","export class Sprite {\r\n    public image: HTMLImageElement;\r\n    public url: string;\r\n    public width: number;\r\n    public height: number;\r\n    public loaded: boolean = false;\r\n\r\n    constructor(url: string) {\r\n        if (url) {\r\n            this.url = url;\r\n            this.load(this.url);\r\n        }\r\n    }\r\n\r\n    public load(url: string) {\r\n        let _this = this;\r\n        this.image = new Image();\r\n        this.image.src = url;\r\n\r\n        this.image.addEventListener('load', (event) => {\r\n            _this.loadHandler(event);\r\n        });\r\n        this.image.addEventListener('error', _this.errorHandler);\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D, x: number, y: number): void {\r\n        context.drawImage(this.image, x, y);\r\n    }\r\n\r\n    public renderSize(context: CanvasRenderingContext2D, x: number, y: number, width: number, height: number): void {\r\n        context.drawImage(this.image, x, y, width, height);\r\n    }\r\n\r\n    public renderSegment(context: CanvasRenderingContext2D, x: number, y: number,\r\n        segmentX: number, segmentY: number, segmentWidth: number, segmentHeight: number): void {\r\n        context.drawImage(this.image, segmentX, segmentY, segmentWidth, segmentHeight,\r\n            x, y, this.width, this.height);\r\n    }\r\n\r\n    public renderSegmentSize(context: CanvasRenderingContext2D, x: number, y: number, width: number, height: number,\r\n        segmentX: number, segmentY: number, segmentWidth: number, segmentHeight: number): void {\r\n        context.drawImage(this.image, segmentX, segmentY, segmentWidth, segmentHeight,\r\n            x, y, width, height);\r\n    }\r\n\r\n    private errorHandler(event: Event): void {\r\n        throw new Error('Failed to load sprite.');\r\n    }\r\n\r\n    private loadHandler(event: Event): void {\r\n        this.loaded = true;\r\n        this.width = this.image.width;\r\n        this.height = this.image.height;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/sprite.ts","import { degreeToRadian, radianToDegree } from './angle';\r\nimport { Http } from './http';\r\nimport { PI, capitalize } from './utility';\r\nimport { ResourceManager } from './resource-manager';\r\n\r\nexport { ResourceManager, degreeToRadian, radianToDegree, Http, PI, capitalize }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/index.ts","import { PI } from './utility';\r\n\r\nexport function degreeToRadian(degree: number): number {\r\n    return degree * (PI / 180);\r\n}\r\n\r\nexport function radianToDegree(radian: number): number {\r\n    return radian * (180 / PI);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/angle.ts","export interface AJAXResponse {\r\n    responseText?: string;\r\n}\r\n\r\nexport class Http {\r\n    public async: boolean = false;\r\n\r\n    constructor(async: boolean) {\r\n        if (async) {\r\n            this.async = async;\r\n        }\r\n    }\r\n\r\n    public get(url: string, callback: Function): void {\r\n        let xhr: XMLHttpRequest = this.createXHR();\r\n\r\n        if (xhr) {\r\n            xhr.open('GET', url, this.async);\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4 && xhr.status === 200) {\r\n                    callback(xhr);\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        }\r\n    }\r\n\r\n    private createXHR(): XMLHttpRequest {\r\n        try { return new XMLHttpRequest(); } catch (err) {}\r\n        try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch (err) {}\r\n        try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch (err) {}\r\n        try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch (err) {}\r\n        try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch (err) {}\r\n\r\n        return null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/http.ts","export class ResourceManager {\r\n    private static _instance: ResourceManager = new ResourceManager();\r\n\r\n    public imageAssets: number = 0;\r\n    public audioAssets: number = 0;\r\n    public otherAssets: number = 0;\r\n\r\n    public loadedImages: number = 0;\r\n    public loadedAudio: number = 0;\r\n    public loadedOther: number = 0;\r\n\r\n    public failedImage: number = 0;\r\n    public failedAudio: number = 0;\r\n    public failedOther: number = 0;\r\n\r\n    constructor() {\r\n        if (ResourceManager._instance) {\r\n            throw new Error('Error: Instantiation failed, Use ResourceManager.getInstance() instead of new.');\r\n        }\r\n\r\n        ResourceManager._instance = this;\r\n    }\r\n\r\n    public static getInstance(): ResourceManager {\r\n        return ResourceManager._instance;\r\n    }\r\n\r\n    public getPercent(): number {\r\n        return Math.ceil(\r\n            (this.loadedImages + this.loadedAudio + this.loadedOther) /\r\n            (this.imageAssets + this.audioAssets + this.otherAssets));\r\n    }\r\n\r\n    public isReady(): boolean {\r\n        return (this.loadedImages + this.loadedAudio + this.loadedOther) ===\r\n            (this.imageAssets + this.audioAssets + this.otherAssets);\r\n    }\r\n\r\n    public addImage(): void {\r\n        this.imageAssets += 1;\r\n    }\r\n\r\n    public imageReady(): void {\r\n        this.loadedImages += 1;\r\n    }\r\n\r\n    public imageFailed(): void {\r\n        this.imageAssets -= 1;\r\n        this.failedImage += 1;\r\n    }\r\n\r\n    public addAudio(): void {\r\n        this.audioAssets += 1;\r\n    }\r\n\r\n    public audioReady(): void {\r\n        this.loadedAudio += 1;\r\n    }\r\n\r\n    public audioFailed(): void {\r\n        this.audioAssets -= 1;\r\n        this.failedAudio += 1;\r\n    }\r\n\r\n    public addOther(): void {\r\n        this.otherAssets += 1;\r\n    }\r\n\r\n    public otherReady(): void {\r\n        this.loadedOther += 1;\r\n    }\r\n\r\n    public otherFailed(): void {\r\n        this.otherAssets -= 1;\r\n        this.failedOther += 1;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/resource-manager.ts","import { Mouse } from './mouse';\r\nimport { Keyboard, Key } from './keyboard';\r\nimport { Touch } from './touch';\r\nimport { Controller } from './controller';\r\n\r\nexport { Mouse, Controller, Keyboard, Key, Touch };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/index.ts","import { CONTAINER_ID } from '../gamesaw';\r\n\r\nexport class Mouse {\r\n    private static instance: Mouse = new Mouse();\r\n    public x: number;\r\n    public y: number;\r\n    public button: boolean[];\r\n    public click: boolean[];\r\n    public stopPropagation: boolean = false;\r\n    public preventDefault: boolean = false;\r\n    private container: HTMLElement;\r\n\r\n    constructor() {\r\n        if (Mouse.instance) {\r\n            throw new Error('Error: Instantiation failed, Use Mouse.getInstance() instead of new.');\r\n        }\r\n\r\n        Mouse.instance = this;\r\n\r\n        this.button = [false, false, false];\r\n        this.click = [false, false, false];\r\n    }\r\n\r\n    public init(): void {\r\n        let _this = this;\r\n        this.container = document.getElementById(CONTAINER_ID);\r\n\r\n        this.container.addEventListener('click', (event) => {\r\n            _this.handleClick(event);\r\n        });\r\n\r\n        this.container.addEventListener('mousemove', (event) => {\r\n            _this.calculateMousePosition(event);\r\n        });\r\n\r\n        this.container.addEventListener('mousedown', (event) => {\r\n            _this.handleMouseDown(event);\r\n        });\r\n\r\n        this.container.addEventListener('mouseup', (event) => {\r\n            _this.handleMouseUp(event);\r\n        });\r\n    }\r\n\r\n    public static getInstance(): Mouse {\r\n        return Mouse.instance;\r\n    }\r\n\r\n    public clearClicks(): void {\r\n        this.click = [false, false, false];\r\n    }\r\n\r\n    private handleClick(event: MouseEvent): void {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.click[event.button] = true;\r\n    }\r\n\r\n    private handleMouseDown(event: MouseEvent): void {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.button[event.button] = true;\r\n    }\r\n\r\n    private handleMouseUp(event: MouseEvent): void {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.button[event.button] = false;\r\n    }\r\n\r\n    private calculateMousePosition(event: MouseEvent): void {\r\n        if (event.pageX && event.pageY) {\r\n            this.x = event.pageX;\r\n            this.y = event.pageY;\r\n        } else {\r\n            this.x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            this.y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n\r\n        this.x -= this.container.offsetLeft;\r\n        this.y -= this.container.offsetTop;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/mouse.ts","export enum Key {\r\n    'BACKSPACE' = 8, 'TAB' = 9, 'ENTER' = 13, 'SHIFT' = 16, 'CTRL' = 17,\r\n    'ALT' = 18, 'PAUSE' = 19, 'CAPS' = 20, 'ESCAPE' = 27, 'PAGEUP' = 33,\r\n    'PAGEDOWN' = 34, 'END' = 35, 'HOME' = 36,\r\n    'LEFT' = 37, 'UP' = 38, 'RIGHT' = 39, 'DOWN' = 40, 'INSERT' = 45, 'DELETE' = 46,\r\n    'ZERO' = 48, 'ONE' = 49, 'TWO' = 50, 'THREE' = 51, 'FOUR' = 52, 'FIVE' = 53, 'SIX' = 54,\r\n    'SEVEN' = 55, 'EIGHT' = 56, 'NINE' = 57,\r\n    'A' = 65, 'B' = 66, 'C' = 67, 'D' = 68, 'E' = 69, 'F' = 70, 'G' = 71,\r\n    'H' = 72, 'I' = 73, 'J' = 74, 'K' = 75, 'L' = 76, 'M' = 77, 'N' = 78,\r\n    'O' = 79, 'P' = 80, 'Q' = 81, 'R' = 82, 'S' = 83, 'T' = 84, 'U' = 85,\r\n    'V' = 86, 'W' = 87, 'Y' = 88, 'X' = 89, 'Z' = 90,\r\n    'LEFTSUPER' = 91, 'RIGHTSUPER' = 92, 'SELECT' = 93,\r\n    'NUM0' = 96, 'NUM1' = 97, 'NUM2' = 98, 'NUM3' = 99, 'NUM4' = 100,\r\n    'NUM5' = 101, 'NUM6' = 102, 'NUM7' = 103, 'NUM8' = 104, 'NUM9' = 105,\r\n    'MULTIPLY' = 106, 'ADD' = 107, 'SUBSTRACT' = 108, 'DECIMAL' = 110,\r\n    'DIVIDE' = 111, 'F1' = 112, 'F2' = 113, 'F3' = 114, 'F4' = 115, 'F5' = 116,\r\n    'F7' = 118, 'F8' = 119, 'F9' = 120, 'F10' = 121, 'F11' = 122, 'F12' = 123,\r\n    'NUMLOCK' = 144, 'SCROLLLOCK' = 145, 'SEMICOLON' = 186, 'EQUAL' = 187,\r\n    'COMMA' = 188, 'DASH' = 189, 'PERIOD' = 190, 'FORWARDSLASH' = 191,\r\n    'GRAVEACCENT' = 192, 'OPENBRACKET' = 219, 'BACKSLASH' = 220, 'CLOSEBRAKET' = 221,\r\n    'SINGLEQUOTE' = 222\r\n};\r\n\r\nexport class Keyboard {\r\n    private static instance: Keyboard = new Keyboard();\r\n    public keys: boolean[] = [];\r\n    public preventDefault: boolean = false;\r\n    public stopPropagation: boolean = false;\r\n    public keyLogger: boolean = false;\r\n\r\n    constructor() {\r\n        if (Keyboard.instance) {\r\n            throw new Error('Error: Instantiation failed, Use Keyboard.getInstance() instead of new.');\r\n        }\r\n\r\n        Keyboard.instance = this;\r\n\r\n        let _this = this;\r\n        for (let i = 0; i < 256; i++) {\r\n            this.keys[i] = false;\r\n        }\r\n\r\n        window.addEventListener('keydown', (event) => {\r\n            _this.handleKeydown(event);\r\n        });\r\n\r\n        window.addEventListener('keyup', (event) => {\r\n            _this.handleKeyup(event);\r\n        });\r\n    }\r\n\r\n    public static getInstance(): Keyboard {\r\n        return Keyboard.instance;\r\n    }\r\n\r\n    public clearKeys(): void {\r\n        for (let key in this.keys) {\r\n            this.keys[key] = false;\r\n        }\r\n    }\r\n\r\n    private handleKeydown(event: KeyboardEvent) {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.keys[event.keyCode] = true;\r\n    }\r\n\r\n    private handleKeyup(event: KeyboardEvent) {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.keys[event.keyCode] = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/keyboard.ts","export class Touch {\r\n    constructor() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/touch.ts","interface Button {\r\n    pressed: boolean;\r\n    value: number;\r\n}\r\n\r\nexport class Controller {\r\n    private static instance: Controller = new Controller();\r\n    public buttons: Button[];\r\n    public axes: number[];\r\n    public id: string;\r\n    public index: number = 0;\r\n    public mapping: string;\r\n    public connected: boolean = false;\r\n\r\n    constructor() {\r\n        let _this = this;\r\n        if (Controller.instance) {\r\n            throw new Error('Error: Instantiation failed, Use Mouse.getInstance() instead of new.');\r\n        }\r\n\r\n        Controller.instance = this;\r\n\r\n        let gamepads = navigator.getGamepads();\r\n        if (gamepads[0] && gamepads[0].connected) {\r\n            this.connected = true;\r\n        }\r\n\r\n        window.addEventListener('gamepadconnected', (event: GamepadEvent) => {\r\n            console.log('Connecting gamepad ' + event.gamepad.id);\r\n            _this.setupController(event);\r\n        });\r\n    }\r\n\r\n    public static getInstance(): Controller {\r\n        return Controller.instance;\r\n    }\r\n\r\n    public setupController(controller: GamepadEvent) {\r\n        this.buttons = controller.gamepad.buttons;\r\n        this.axes = controller.gamepad.axes;\r\n        this.id = controller.gamepad.id;\r\n        this.index = controller.gamepad.index;\r\n        this.mapping = controller.gamepad.mapping;\r\n        this.connected = controller.gamepad.connected;\r\n    }\r\n\r\n    public update(delta: number) {\r\n        let gamepad: Gamepad = navigator.getGamepads()[this.index];\r\n\r\n        this.buttons = gamepad.buttons;\r\n        this.axes = gamepad.axes;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/controller.ts","import * as Render2d from './renderer2d/index';\r\nimport * as Shader from './shader/index';\r\nimport * as Particle from './particle/index';\r\nimport * as Font from './font/index';\r\nimport * as Tilemap from './tilemap/index';\r\nimport * as FX from './fx/index';\r\nimport { Texture } from './texture';\r\nimport { Sprite } from './sprite';\r\nimport { AnimatedSprite, Animations } from './animated-sprite';\r\n\r\nexport { Render2d, Shader, Texture, Sprite, AnimatedSprite, Animations, Particle, Font, Tilemap, FX };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/index.ts","import { Renderer2d } from './renderer2d';\r\nimport { RenderCall } from './render-call';\r\nimport { FrameBuffer } from './framebuffer';\r\n\r\nexport { Renderer2d, RenderCall, FrameBuffer };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/renderer2d/index.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { RenderCall } from './render-call';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute vec2 a_texCoord;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'uniform int u_flip;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'   if (u_flip == 1) {\\n' +\r\n'       gl_Position = vec4(clipSpace * vec2(1, 1), 0, 1);\\n' +\r\n'\t} else {\\n' +\r\n'       gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'   }\\n' +\r\n'\tv_texCoord = a_texCoord;\\n' +\r\n'}\\n';\r\n\r\nconst fragmentShader: string = 'precision mediump float;\\n' +\r\n'uniform sampler2D u_image;\\n' +\r\n'varying vec2 v_texCoord;\\n\\n' +\r\n'void main() {\\n' +\r\n'\tvec4 baseTexture = texture2D(u_image, v_texCoord);\\n' +\r\n'\tgl_FragColor = baseTexture;\\n' +\r\n'}\\n';\r\n\r\nexport class Renderer2d {\r\n    public gl: WebGLRenderingContext;\r\n    public program: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public flip: WebGLUniformLocation;\r\n    public position: number;\r\n    public textureCoordinates: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public indexBuffer: WebGLBuffer;\r\n    public texCoordBuffer: WebGLBuffer;\r\n    public width: number = 800;\r\n    public height: number = 600;\r\n    public flipY: number = 0;\r\n\r\n    public renderCalls: RenderCall[] = [];\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.program = new Program(this.gl);\r\n        this.program.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.program.loadShader(ShaderType.FRAGMENT, fragmentShader);\r\n        this.program.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n        this.flip = gl.getUniformLocation(this.program.program, 'u_flip');\r\n        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n        this.textureCoordinates = gl.getAttribLocation(this.program.program, 'a_texCoord');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.indexBuffer = gl.createBuffer();\r\n        this.texCoordBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public addCall(renderCall: RenderCall) {\r\n        let found = false;\r\n\r\n        for (let i in this.renderCalls) {\r\n            if (this.renderCalls[i].texture === renderCall.texture) {\r\n                this.renderCalls[i].add(renderCall);\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!found) {\r\n            this.renderCalls.push(new RenderCall());\r\n            let i = this.renderCalls.length - 1;\r\n            this.renderCalls[i].texture = renderCall.texture;\r\n            this.renderCalls[i].add(renderCall);\r\n        }\r\n\r\n    }\r\n\r\n    public clear(): void {\r\n        this.renderCalls = [];\r\n    }\r\n\r\n    public execute(): void {\r\n        this.flush();\r\n        this.clear();\r\n    }\r\n\r\n    public flush(): void {\r\n        let gl = this.gl;\r\n        gl.useProgram(this.program.program);\r\n\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.cullFace(gl.FRONT_AND_BACK);\r\n        gl.uniform2f(this.resolution, this.width, this.height);\r\n        gl.uniform1i(this.flip, this.flipY);\r\n\r\n        for (let call in this.renderCalls) {\r\n            gl.bindTexture(gl.TEXTURE_2D, this.renderCalls[call].texture);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].vertices), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(this.position);\r\n            gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].uvs), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(this.textureCoordinates);\r\n            gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.renderCalls[call].indices), gl.STATIC_DRAW);\r\n\r\n            gl.drawElements(gl.TRIANGLES, this.renderCalls[call].numIndices, gl.UNSIGNED_SHORT, 0);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/renderer2d/renderer2d.ts","import { Http } from '../../utility/http';\r\nimport { ResourceManager } from '../../utility/resource-manager';\r\n\r\ninterface AJAXResponse {\r\n    responseText?: string;\r\n}\r\n\r\nexport enum ShaderType {\r\n    VERTEX,\r\n    FRAGMENT\r\n}\r\n\r\nexport class Program {\r\n    public vertexShader: WebGLShader;\r\n    public fragmentShader: WebGLShader;\r\n    public program: WebGLProgram;\r\n    public gl: WebGLRenderingContext;\r\n    private http: Http;\r\n    private resourceManager: ResourceManager;\r\n\r\n    constructor(gl: WebGLRenderingContext, fragmentShaderUrl?: string, vertexShaderUrl?: string) {\r\n        this.gl = gl;\r\n        this.http = new Http(false);\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n\r\n        if (fragmentShaderUrl && vertexShaderUrl) {\r\n            this.initShader(fragmentShaderUrl, vertexShaderUrl);\r\n        }\r\n    }\r\n\r\n    public getProgram(): WebGLProgram {\r\n        return this.program;\r\n    }\r\n\r\n    public loadShader(type: ShaderType, shader: string): void {\r\n        if (type === ShaderType.VERTEX) {\r\n            this.vertexShader = this.compileShader(type, shader);\r\n        } else {\r\n            this.fragmentShader = this.compileShader(type, shader);\r\n        }\r\n    }\r\n\r\n    private compileShader(type: ShaderType, shaderSrc: string): WebGLShader {\r\n        let shader: WebGLShader;\r\n\r\n        if (type === ShaderType.VERTEX) {\r\n            shader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n        } else if (type === ShaderType.FRAGMENT) {\r\n            shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n        } else {\r\n            throw new Error('No valid shader type specified.');\r\n        }\r\n\r\n        this.gl.shaderSource(shader, shaderSrc);\r\n        this.gl.compileShader(shader);\r\n\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n            throw new Error(this.gl.getShaderInfoLog(shader));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    public createProgram(): void {\r\n        this.program = this.gl.createProgram();\r\n\r\n        this.gl.attachShader(this.program, this.vertexShader);\r\n        this.gl.attachShader(this.program, this.fragmentShader);\r\n        this.gl.linkProgram(this.program);\r\n\r\n        if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\r\n            throw new Error('Unable to initialize the shader program.');\r\n        }\r\n\r\n        this.gl.useProgram(this.program);\r\n    }\r\n\r\n    public initShader(fsUrl: string, vsUrl: string): void {\r\n        let _this = this;\r\n\r\n        this.resourceManager.addOther();\r\n\r\n        this.http.get(fsUrl, (data: AJAXResponse) => {\r\n            _this.loadShader(ShaderType.FRAGMENT, data.responseText);\r\n        });\r\n\r\n        this.http.get(vsUrl, (data: AJAXResponse) => {\r\n            _this.loadShader(ShaderType.VERTEX, data.responseText);\r\n        });\r\n\r\n        this.resourceManager.otherReady();\r\n        this.createProgram();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/shader/program.ts","export class RenderCall {\r\n    vertices: number[];\r\n    indices: number[];\r\n    uvs: number[];\r\n    index: number;\r\n    numIndices: number;\r\n    texture: WebGLTexture;\r\n\r\n    constructor() {\r\n        this.flush();\r\n    }\r\n\r\n    public add(renderCall: RenderCall) {\r\n        this.vertices = this.vertices.concat(renderCall.vertices);\r\n        this.uvs = this.uvs.concat(renderCall.uvs);\r\n\r\n        renderCall.indices.forEach((i) => {\r\n            this.indices.push(i + this.index);\r\n        });\r\n\r\n        this.index += this.findMaxIndex(renderCall.indices);\r\n        this.numIndices += renderCall.numIndices;\r\n    }\r\n\r\n    public findMaxIndex(indices: number[]): number {\r\n        let max: number = 0;\r\n\r\n        indices.forEach((i) => {\r\n            if (i > max) {\r\n                max = i;\r\n            }\r\n        });\r\n\r\n        max += 1;\r\n\r\n        return max;\r\n    }\r\n\r\n    public flush() {\r\n        this.vertices = [];\r\n        this.indices = [];\r\n        this.uvs = [];\r\n        this.index = 0;\r\n        this.numIndices = 0;\r\n    }\r\n\r\n    public setTexture(texture: WebGLTexture) {\r\n        this.texture = texture;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/renderer2d/render-call.ts","export class FrameBuffer {\r\n    public gl: WebGLRenderingContext;\r\n    public texture: WebGLTexture;\r\n    public fbo: WebGLFramebuffer;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init() {\r\n        let gl = this.gl;\r\n        this.fbo = gl.createFramebuffer();\r\n\r\n        if (!this.fbo) {\r\n            throw new Error('Failed to create FBO.');\r\n        }\r\n\r\n        this.texture = gl.createTexture();\r\n\r\n        if (!this.texture) {\r\n            throw new Error('Failed to create FBO texture.');\r\n        }\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n        let depthBuffer = gl.createRenderbuffer();\r\n        if (!depthBuffer) {\r\n            throw new Error('Failed to create depth buffer.');\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n\r\n        let err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\r\n        if (gl.FRAMEBUFFER_COMPLETE !== err) {\r\n            throw new Error('Framebuffer object is incomplete: ' + err.toString());\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/renderer2d/framebuffer.ts","import { Program } from './program';\r\nimport { ShaderManager } from './shader-manager';\r\n\r\nexport { Program, ShaderManager };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/shader/index.ts","import { Program } from './program';\r\n\r\ninterface ProgramList {\r\n    [index: string]: Program;\r\n}\r\n\r\nexport class ShaderManager {\r\n    public programs: ProgramList = {};\r\n    public gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n    }\r\n\r\n    public createProgram(fragmentShaderUrl: string, vertexShaderUrl: string, id: string) {\r\n        this.programs[id] = new Program(this.gl, fragmentShaderUrl, vertexShaderUrl);\r\n    }\r\n\r\n    public getProgram(id: string): WebGLProgram {\r\n        return this.programs[id].getProgram();\r\n    }\r\n\r\n    public useProgram(id: string): void {\r\n        this.gl.useProgram(this.programs[id].getProgram());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/shader/shader-manager.ts","import { Particle } from './particle';\r\nimport { ParticleEmitter } from './particle-emitter';\r\nimport { ParticleSystem } from './particle-system';\r\nimport { ParticleRenderer } from './particle-renderer';\r\n\r\nexport { Particle, ParticleEmitter, ParticleSystem, ParticleRenderer }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/index.ts","import { Point, Vector2 } from '../../geometry/index';\r\n\r\nexport class Particle {\r\n    public life: number;\r\n    public size: number;\r\n    public pos: Point;\r\n    public dir: Point;\r\n    public vel: number;\r\n    public alpha: number;\r\n\r\n    constructor(position: Point, direction: Point, size: number, velocity: number, life: number, alpha: number) {\r\n        this.pos = position;\r\n        this.dir = direction;\r\n        this.size = size;\r\n        this.vel = velocity;\r\n        this.life = life;\r\n        this.alpha = alpha;\r\n    }\r\n\r\n    public update(gravity: number, wind: number, growth: number, delta: number): void {\r\n        this.life -= delta;\r\n        this.size += growth;\r\n        this.dir.y += gravity;\r\n        this.dir.x += wind;\r\n        this.pos.x += (this.dir.x * this.vel);\r\n        this.pos.y += (this.dir.y * this.vel);\r\n    }\r\n\r\n    public isDead(): boolean {\r\n        return this.life < 0;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/particle.ts","import { Particle } from './particle';\r\nimport { ParticleRenderer } from './particle-renderer';\r\nimport { Point } from '../../geometry/index';\r\nimport { Texture } from '../texture';\r\nimport { Color } from '../../graphics/color';\r\nimport { Http } from '../../utility/http';\r\n\r\ninterface AJAXResponse {\r\n    responseText?: string;\r\n}\r\n\r\nexport class ParticleEmitter {\r\n    public gl: WebGLRenderingContext;\r\n    public renderer: ParticleRenderer;\r\n    public particles: Particle[] = [];\r\n    public vertices: number[] = [];\r\n    public sizes: number[] = [];\r\n    public currentLife: number;\r\n\r\n    public texture: Texture;\r\n    public pos: Point;\r\n    public maxDir: Point;\r\n    public minDir: Point;\r\n    public maxVel: number;\r\n    public minVel: number;\r\n    public maxSize: number;\r\n    public minSize: number;\r\n    public constant: boolean = false;\r\n    public growth: number;\r\n    public color: Color = new Color(240, 175, 25, 0.4);\r\n    public angularVel: number;\r\n    public gravity: number;\r\n    public wind: number;\r\n    public maxLife: number;\r\n    public minLife: number;\r\n    public particlesPerSecond: number;\r\n    public particlesAtStart: number;\r\n    public lifeCycle: number;\r\n\r\n    public blendSrc: number;\r\n    public blendDst: number;\r\n\r\n    private http: Http;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n        this.blendSrc = gl.SRC_ALPHA;\r\n        this.blendDst = gl.ONE;\r\n\r\n        this.http = new Http(false);\r\n    }\r\n\r\n    public setup(texture: Texture, position: Point, maxDirection: Point, minDirection: Point, maxVelocity: number, minVelocity: number,\r\n        maxSize: number, minSize: number, maxLife: number, minLife: number, growth: number, gravity: number, wind: number,\r\n        angularVelocity: number, lifeCycle: number, particlesPerSecond: number, particlesAtStart: number, constant: boolean, color: Color): void {\r\n        this.texture = texture;\r\n        this.pos = position;\r\n        this.maxDir = maxDirection;\r\n        this.minDir = minDirection;\r\n        this.maxVel = maxVelocity;\r\n        this.minVel = minVelocity;\r\n        this.maxSize = maxSize;\r\n        this.minSize = minSize;\r\n        this.maxLife = maxLife;\r\n        this.minLife = minLife;\r\n        this.growth = growth;\r\n        this.gravity = gravity;\r\n        this.wind = wind;\r\n        this.angularVel = angularVelocity;\r\n        this.lifeCycle = lifeCycle;\r\n        this.particlesPerSecond = particlesPerSecond;\r\n        this.particlesAtStart = particlesAtStart;\r\n        this.constant = constant;\r\n        this.color = color;\r\n    }\r\n\r\n    public load(url: string) {\r\n        this.http.get(url, (data: AJAXResponse) => {\r\n            let emitter = JSON.parse(data.responseText);\r\n        });\r\n    }\r\n\r\n    public toJson(): string {\r\n        return '';\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        this.vertices = [];\r\n        this.sizes = [];\r\n\r\n        if (this.constant) {\r\n            let numParticles = Math.ceil((delta / 1000) * this.particlesPerSecond);\r\n\r\n            for (let i = 0; i < numParticles; i += 1) {\r\n                this.particles.push(this.addParticle());\r\n            }\r\n        } else {\r\n            this.currentLife -= delta;\r\n\r\n            if (this.currentLife < 0) {\r\n                for (let i = 0; i < this.particlesAtStart; i += 1) {\r\n                    this.particles.push(this.addParticle());\r\n                }\r\n\r\n                this.currentLife = this.lifeCycle;\r\n            }\r\n        }\r\n\r\n        let length = this.particles.length;\r\n\r\n        for (let i = 0; i < length; i += 1) {\r\n            this.particles[i].update(this.gravity, this.wind, this.growth, delta);\r\n\r\n            if (this.particles[i].isDead()) {\r\n                this.particles.splice(i, 1);\r\n                length -= 1;\r\n            } else {\r\n                this.vertices.push(this.particles[i].pos.x);\r\n                this.vertices.push(this.particles[i].pos.y);\r\n                this.sizes.push(this.particles[i].size);\r\n            }\r\n        }\r\n    }\r\n\r\n    public addParticle(): Particle {\r\n        return new Particle(new Point(this.pos.x, this.pos.y),\r\n            new Point(this.randomMinMax(this.minDir.x, this.maxDir.x), this.randomMinMax(this.minDir.y, this.maxDir.y)),\r\n            this.randomMinMax(this.minSize, this.maxSize),\r\n            this.randomMinMax(this.minVel, this.maxVel),\r\n            this.randomMinMax(this.minLife, this.maxLife),\r\n            this.color.getAlpha());\r\n    }\r\n\r\n    public randomMinMax(min: number, max: number): number {\r\n        return (Math.random() * (max - min)) + min;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/particle-emitter.ts","export class ParticleSystem {\r\n    constructor() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/particle-system.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { ParticleEmitter } from './particle-emitter';\r\nimport { ParticleSystem } from './particle-system';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute float a_pointSize;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'\tgl_PointSize = a_pointSize;\\n' +\r\n'}\\n';\r\n\r\nconst fragmentShader: string = 'precision mediump float;\\n' +\r\n'uniform sampler2D u_image;\\n' +\r\n'uniform vec4 u_color;\\n' +\r\n'void main() {\\n' +\r\n'\tvec4 baseTexture = texture2D(u_image, gl_PointCoord);\\n' +\r\n'\tvec4 baseColor = u_color;\\n' +\r\n'\tfloat alpha = u_color.w;\\n' +\r\n'\tgl_FragColor = baseTexture * u_color;\\n' +\r\n'}\\n';\r\n\r\nexport class ParticleRenderer {\r\n    public gl: WebGLRenderingContext;\r\n    public program: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public colorLocation: WebGLUniformLocation;\r\n    public pointSize: number;\r\n    public position: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public sizeBuffer: WebGLBuffer;\r\n    public width: number = 800;\r\n    public height: number = 600;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.program = new Program(this.gl);\r\n        this.program.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.program.loadShader(ShaderType.FRAGMENT, fragmentShader);\r\n        this.program.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n        this.colorLocation = gl.getUniformLocation(this.program.program, 'u_color');\r\n        this.pointSize = gl.getAttribLocation(this.program.program, 'a_pointSize');\r\n        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.sizeBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public render(emitter: ParticleEmitter): void {\r\n        let gl = this.gl;\r\n\r\n        gl.useProgram(this.program.program);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(emitter.blendSrc, emitter.blendDst);\r\n\r\n        gl.uniform2f(this.resolution, this.width, this.height);\r\n        gl.bindTexture(gl.TEXTURE_2D, emitter.texture.texture);\r\n\r\n        let col: number[] = emitter.color.getRGBAFloat();\r\n\r\n        gl.uniform4f(this.colorLocation, col[0], col[1], col[2], col[3]);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(emitter.vertices), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.position);\r\n        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.sizeBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(emitter.sizes), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.pointSize);\r\n        gl.vertexAttribPointer(this.pointSize, 1, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.drawArrays(gl.POINTS, 0, emitter.vertices.length / 2);\r\n\r\n        gl.disableVertexAttribArray(this.position);\r\n        gl.disableVertexAttribArray(this.pointSize);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/particle-renderer.ts","import { Font } from './font';\r\nimport { BitmapFont } from './bitmap-font';\r\nimport { FontRenderer } from './font-renderer';\r\n\r\nexport { BitmapFont, Font, FontRenderer };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/font/index.ts","import { Texture } from '../texture';\r\nimport { Color } from '../../graphics/color';\r\nimport { Http, AJAXResponse } from '../../utility/http';\r\nimport { ResourceManager } from '../../utility/resource-manager';\r\nimport { FontRenderer } from './font-renderer';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\nimport { BitmapFont, Glyph } from './bitmap-font';\r\n\r\nexport interface FontTexture {\r\n    [index: number]: Texture;\r\n}\r\n\r\nconst enum Align {\r\n    LEFT,\r\n    CENTER,\r\n    RIGHT\r\n}\r\n\r\nexport class Font {\r\n    public gl: WebGLRenderingContext;\r\n    public resourceManager: ResourceManager;\r\n    public texturePage: FontTexture = {};\r\n    public font: BitmapFont = new BitmapFont();\r\n    public base: number = 0;\r\n    public lineHeight: number = 0;\r\n    public color: Color = new Color(255, 255, 255, 1.0);\r\n    public configUrl: string;\r\n    public align: number = Align.LEFT;\r\n    private http: Http;\r\n\r\n    constructor(gl: WebGLRenderingContext, configUrl?: string) {\r\n        this.gl = gl;\r\n        this.http = new Http(false);\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n\r\n        if (configUrl) {\r\n            this.configUrl = configUrl;\r\n\r\n            this.load(configUrl);\r\n        }\r\n    }\r\n\r\n    public load(configUrl: string): void {\r\n        let _this = this;\r\n\r\n        this.resourceManager.addOther();\r\n\r\n        this.http.get(configUrl, (data: XMLHttpRequest) => {\r\n            _this.parseConfig(data.responseXML);\r\n        });\r\n    }\r\n\r\n    public parseConfig(xmlConfig: XMLDocument): void {\r\n        let pages = xmlConfig.getElementsByTagName('page');\r\n        let char = xmlConfig.getElementsByTagName('char');\r\n        let common = xmlConfig.getElementsByTagName('common')[0];\r\n        let info = xmlConfig.getElementsByTagName('info')[0];\r\n\r\n        this.font.glyphCount = +xmlConfig.getElementsByTagName('chars')[0].getAttribute('count');\r\n\r\n        // Info data\r\n        this.font.info = {\r\n            face: info.getAttribute('face'),\r\n            size: +info.getAttribute('size'),\r\n            italic: +info.getAttribute('italic'),\r\n            charset: info.getAttribute('charset'),\r\n            unicode: +info.getAttribute('unicode'),\r\n            bold: +info.getAttribute('bold'),\r\n            stretchHeight: +info.getAttribute('stretchH'),\r\n            smooth: +info.getAttribute('smooth'),\r\n            antiAliasing: +info.getAttribute('aa'),\r\n            padding: info.getAttribute('padding').split(',').map(src => +src),\r\n            spacing: info.getAttribute('spacing').split(',').map(src => +src),\r\n            outline: +info.getAttribute('outline')\r\n        };\r\n\r\n        // Common data\r\n        this.font.common = {\r\n            lineHeight: +common.getAttribute('lineHeight'),\r\n            base: +common.getAttribute('base'),\r\n            scaleWidth: +common.getAttribute('scaleW'),\r\n            scaleHeight: +common.getAttribute('scaleH'),\r\n            pages: +common.getAttribute('pages'),\r\n            packed: +common.getAttribute('packed'),\r\n            alphaChannel: +common.getAttribute('alphaChnl'),\r\n            redChannel: +common.getAttribute('redChnl'),\r\n            greenChannel: +common.getAttribute('greenChnl'),\r\n            blueChannel: +common.getAttribute('blueChnl')\r\n        };\r\n\r\n\r\n        for (let i = 0; i < pages.length; i += 1) {\r\n            let file = pages[i].getAttribute('file');\r\n            let id = +pages[i].getAttribute('id');\r\n\r\n            this.font.pages[id] = {\r\n                file: file\r\n            };\r\n\r\n            this.texturePage[id] = new Texture(this.gl, file);\r\n        }\r\n\r\n        for (let i = 0; i < char.length; i += 1) {\r\n            let id = +char[i].getAttribute('id');\r\n            this.font.glyphs[id] = {\r\n                x: +char[i].getAttribute('x'),\r\n                y: +char[i].getAttribute('y'),\r\n                width: +char[i].getAttribute('width'),\r\n                height: +char[i].getAttribute('height'),\r\n                xOffset: +char[i].getAttribute('xoffset'),\r\n                yOffset: +char[i].getAttribute('yoffset'),\r\n                xAdvance: +char[i].getAttribute('xadvance'),\r\n                page: +char[i].getAttribute('page'),\r\n                channel: +char[i].getAttribute('chnl')\r\n            };\r\n        }\r\n\r\n        this.resourceManager.otherReady();\r\n    }\r\n\r\n    public drawString(renderer: FontRenderer, str: string, x: number, y: number): void {\r\n        let currentX: number = x;\r\n        let currentY: number = 0;\r\n\r\n        if (this.align === Align.CENTER) {\r\n            let stringWidth = this.calculateWidth(str);\r\n            currentX = x - Math.floor(stringWidth / 2);\r\n        } else if (this.align === Align.RIGHT) {\r\n            let stringWidth = this.calculateWidth(str);\r\n            currentX = x - stringWidth;\r\n        }\r\n\r\n        for (let i = 0; i < str.length; i += 1) {\r\n            let id = str.charCodeAt(i);\r\n\r\n            if (this.font.glyphs[id]) {\r\n                let glyph = this.font.glyphs[id];\r\n\r\n                this.renderGlyph(renderer, currentX + glyph.xOffset, y + glyph.yOffset, glyph);\r\n                currentX += glyph.xAdvance;\r\n            }\r\n        }\r\n    }\r\n\r\n    public renderGlyph(renderer: FontRenderer, x: number, y: number, glyph: Glyph): void {\r\n        let uvs: number[] = [];\r\n\r\n        uvs[0] = glyph.x / this.font.common.scaleWidth;\r\n        uvs[1] = glyph.y / this.font.common.scaleHeight;\r\n        uvs[2] = (glyph.x + glyph.width) / this.font.common.scaleWidth;\r\n        uvs[3] = (glyph.y + glyph.height) / this.font.common.scaleHeight;\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texturePage[glyph.page].texture;\r\n        renderCall.vertices = [x, y, x + glyph.width, y, x, y + glyph.height, x + glyph.width, y + glyph.height];\r\n        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public calculateWidth(str: string): number {\r\n        let width = 0;\r\n\r\n        for (let i = 0; i < str.length; i += 1) {\r\n            let id = str.charCodeAt(i);\r\n\r\n            width += +this.font.glyphs[id]['xAdvance'];\r\n        }\r\n\r\n        return width;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/font/font.ts","import { ResourceManager } from '../utility/resource-manager';\r\n\r\nexport class Texture {\r\n    private gl: WebGLRenderingContext;\r\n    private resourceManager: ResourceManager;\r\n    public image: HTMLImageElement;\r\n    public url: string;\r\n    public width: number;\r\n    public height: number;\r\n    public texture: WebGLTexture;\r\n    public loaded: boolean = false;\r\n    public ready: boolean = false;\r\n\r\n    constructor(gl: WebGLRenderingContext, url?: string) {\r\n        this.gl = gl;\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n\r\n        if (url) {\r\n            this.url;\r\n            this.load(url);\r\n        }\r\n    }\r\n\r\n    public load(url: string) {\r\n        let _this = this;\r\n        let gl = this.gl;\r\n\r\n        this.resourceManager.addImage();\r\n\r\n        this.image = new Image();\r\n        this.image.src = url;\r\n        this.texture = gl.createTexture();\r\n\r\n        this.image.addEventListener('load', (event) => {\r\n            _this.loadHandler(event);\r\n        });\r\n        this.image.addEventListener('error', _this.errorHandler);\r\n    }\r\n\r\n    private init(): void {\r\n        let gl = this.gl;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        this.ready = true;\r\n    }\r\n\r\n    private errorHandler(event: Event): void {\r\n        if (this.resourceManager) {\r\n            this.resourceManager.imageFailed();\r\n        }\r\n\r\n        throw new Error('Failed to load sprite.');\r\n    }\r\n\r\n    private loadHandler(event: Event): void {\r\n        this.loaded = true;\r\n        this.width = this.image.width;\r\n        this.height = this.image.height;\r\n\r\n        this.resourceManager.imageReady();\r\n\r\n        this.init();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/texture.ts","export interface Glyph {\r\n    x: number;\r\n    y: number;\r\n    xOffset: number;\r\n    yOffset: number;\r\n    width: number;\r\n    height: number;\r\n    xAdvance: number;\r\n    page: number;\r\n    channel: number;\r\n}\r\n\r\nexport interface GlyphSet {\r\n    [index: number]: Glyph;\r\n}\r\n\r\nexport interface FontInfo {\r\n    face: string;\r\n    size: number;\r\n    bold: number;\r\n    italic: number;\r\n    charset: string;\r\n    unicode: number;\r\n    stretchHeight: number;\r\n    smooth: number;\r\n    padding: number[];\r\n    antiAliasing: number;\r\n    spacing: number[];\r\n    outline: number;\r\n}\r\n\r\nexport interface FontCommon {\r\n    lineHeight: number;\r\n    base: number;\r\n    scaleWidth: number;\r\n    scaleHeight: number;\r\n    pages: number;\r\n    packed: number;\r\n    alphaChannel: number;\r\n    redChannel: number;\r\n    greenChannel: number;\r\n    blueChannel: number;\r\n}\r\n\r\nexport interface PageSet {\r\n    [index: number]: FontPage;\r\n}\r\n\r\nexport interface FontPage {\r\n    file: string;\r\n}\r\n\r\nexport class BitmapFont {\r\n    public info: FontInfo;\r\n    public common: FontCommon;\r\n    public pages: PageSet = {};\r\n    public glyphs: GlyphSet = {};\r\n    public glyphCount: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/font/bitmap-font.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { Color } from '../../graphics/color';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute vec2 a_texCoord;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'\tv_texCoord = a_texCoord;\\n' +\r\n'}\\n';\r\n\r\nconst fragmentShader: string = 'precision mediump float;\\n' +\r\n'uniform sampler2D u_image;\\n' +\r\n'uniform vec4 u_color;\\n' +\r\n'varying vec2 v_texCoord;\\n\\n' +\r\n'void main() {\\n' +\r\n'\tvec4 baseTexture = texture2D(u_image, v_texCoord);\\n' +\r\n'\tgl_FragColor = baseTexture * u_color * u_color.w;\\n' +\r\n'}\\n';\r\n\r\ninterface RenderCalls {\r\n    [index: number]: RenderCall;\r\n}\r\n\r\nexport class FontRenderer {\r\n    public gl: WebGLRenderingContext;\r\n    public program: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public colorLocation: WebGLUniformLocation;\r\n    public position: number;\r\n    public textureCoordinates: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public indexBuffer: WebGLBuffer;\r\n    public texCoordBuffer: WebGLBuffer;\r\n    public color: Color = new Color(255, 255, 255, 1);\r\n    public width: number = 800;\r\n    public height: number = 600;\r\n\r\n    public renderCalls: RenderCalls = {};\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.program = new Program(this.gl);\r\n        this.program.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.program.loadShader(ShaderType.FRAGMENT, fragmentShader);\r\n        this.program.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n        this.colorLocation = gl.getUniformLocation(this.program.program, 'u_color');\r\n        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n        this.textureCoordinates = gl.getAttribLocation(this.program.program, 'a_texCoord');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.indexBuffer = gl.createBuffer();\r\n        this.texCoordBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public setColor(color: Color) {\r\n        this.color = color;\r\n    }\r\n\r\n    public addCall(renderCall: RenderCall) {\r\n        if (!this.renderCalls[renderCall.texture as number]) {\r\n            this.renderCalls[renderCall.texture as number] = new RenderCall();\r\n            this.renderCalls[renderCall.texture as number].texture = renderCall.texture;\r\n        }\r\n\r\n        this.renderCalls[renderCall.texture as number].add(renderCall);\r\n    }\r\n\r\n    public clear(): void {\r\n        this.renderCalls = {};\r\n    }\r\n\r\n    public execute(): void {\r\n        this.flush();\r\n        this.clear();\r\n    }\r\n\r\n    public flush(): void {\r\n        let gl = this.gl;\r\n        gl.useProgram(this.program.program);\r\n\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.uniform2f(this.resolution, this.width, this.height);\r\n\r\n        for (let call in this.renderCalls) {\r\n            gl.bindTexture(gl.TEXTURE_2D, this.renderCalls[call].texture);\r\n\r\n            let col: number[] = this.color.getRGBAFloat();\r\n            gl.uniform4f(this.colorLocation, col[0], col[1], col[2], col[3]);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].vertices), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(this.position);\r\n            gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].uvs), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(this.textureCoordinates);\r\n            gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.renderCalls[call].indices), gl.STATIC_DRAW);\r\n\r\n            gl.drawElements(gl.TRIANGLES, this.renderCalls[call].numIndices, gl.UNSIGNED_SHORT, 0);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/font/font-renderer.ts","import { Tilemap } from './tilemap';\r\nimport { TilemapLayer } from './tilemap-layer';\r\nimport { Tileset } from './tileset';\r\nimport { Tile } from './tile';\r\n\r\nexport { Tilemap, TilemapLayer, Tileset, Tile }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/index.ts","import { TilemapLayer } from './tilemap-layer';\r\nimport { Tileset } from './tileset';\r\nimport { Color } from '../../graphics/color';\r\nimport { Http, AJAXResponse } from '../../utility/http';\r\nimport { ResourceManager } from '../../utility/resource-manager';\r\nimport { Renderer2d } from '../renderer2d/renderer2d';\r\nimport { Rectangle } from '../../geometry/rectangle';\r\n\r\nexport interface Tiled {\r\n    width: number;\r\n    height: number;\r\n    tilewidth: number;\r\n    tileheight: number;\r\n    backgroundcolor: string;\r\n    nextobjectid: number;\r\n    orientation: string;\r\n    renderorder: string;\r\n    version: number;\r\n    layers: TiledLayer[];\r\n    tilesets: TiledTileset[];\r\n}\r\n\r\nexport interface TiledTileset {\r\n    name: string;\r\n    image: string;\r\n    imagewidth: number;\r\n    imageheight: number;\r\n    firstgid: number;\r\n    margin: number;\r\n    spacing: number;\r\n    columns: number;\r\n    tilecount: number;\r\n    tilewidth: number;\r\n    tileheight: number;\r\n}\r\n\r\nexport interface TiledLayer {\r\n    data: string;\r\n    encoding: string;\r\n    height: number;\r\n    width: number;\r\n    x: number;\r\n    y: number;\r\n    opacity: number;\r\n    visible: boolean;\r\n    name: string;\r\n    type: string;\r\n}\r\n\r\nexport interface TileInfo {\r\n    collider?: Rectangle;\r\n    id: number;\r\n    row?: number;\r\n    col?: number;\r\n}\r\n\r\nexport class Tilemap {\r\n    public gl: WebGLRenderingContext;\r\n    private resourceManager: ResourceManager;\r\n    public layers: TilemapLayer[] = [];\r\n    public tilesets: Tileset[] = [];\r\n    public width: number;\r\n    public height: number;\r\n    public tileWidth: number;\r\n    public tileHeight: number;\r\n    public backgroundColor: Color = new Color(100, 100, 100, 1);\r\n    public ready: boolean = false;\r\n    public orientation: string;\r\n    public renderOrder: string;\r\n    public nextObjectId: number;\r\n    public activeLayer: number = 0;\r\n\r\n    private http: Http;\r\n\r\n    constructor(gl?: WebGLRenderingContext) {\r\n        if (gl) {\r\n            this.gl = gl;\r\n        }\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n\r\n        this.http = new Http(false);\r\n    }\r\n\r\n    public loadTiledMap(url: string) {\r\n        let _this = this;\r\n\r\n        this.resourceManager.addOther();\r\n\r\n        this.http.get(url, (data: AJAXResponse) => {\r\n            _this.parseTiledMap(data.responseText);\r\n        });\r\n    }\r\n\r\n    public parseTiledMap(json: string): void {\r\n        let map = JSON.parse(json) as Tiled;\r\n        this.width = map.width;\r\n        this.height = map.height;\r\n        this.tileWidth = map.tilewidth;\r\n        this.tileHeight = map.tileheight;\r\n        this.orientation = map.orientation;\r\n        this.renderOrder = map.renderorder;\r\n        this.nextObjectId = map.nextobjectid;\r\n\r\n        if (map.backgroundcolor) {\r\n            this.backgroundColor.setHex(map.backgroundcolor);\r\n        }\r\n\r\n\r\n        for (let layer of map.layers) {\r\n            this.layers.push(new TilemapLayer(\r\n                layer.data,\r\n                layer.encoding,\r\n                layer.width,\r\n                layer.height,\r\n                layer.x,\r\n                layer.y,\r\n                layer.opacity,\r\n                layer.visible,\r\n                layer.name,\r\n                layer.type\r\n            ));\r\n        }\r\n\r\n        for (let tileset of map.tilesets) {\r\n            this.tilesets.push(new Tileset(\r\n                this.gl,\r\n                tileset.name,\r\n                tileset.image,\r\n                tileset.imagewidth,\r\n                tileset.imageheight,\r\n                tileset.firstgid,\r\n                tileset.margin,\r\n                tileset.spacing,\r\n                tileset.columns,\r\n                tileset.tilecount,\r\n                tileset.tilewidth,\r\n                tileset.tileheight\r\n            ));\r\n        }\r\n\r\n        this.resourceManager.otherReady();\r\n    }\r\n\r\n    public setActiveLayer(activeLayer: number): void {\r\n        this.activeLayer = activeLayer;\r\n    }\r\n\r\n    public getActiveLayer(): number {\r\n        return this.activeLayer;\r\n    }\r\n\r\n    public getContainedTiles(container: Rectangle, scale?: number): TileInfo[] {\r\n        let tiles: TileInfo[] = [];\r\n\r\n        return tiles;\r\n    }\r\n\r\n    public getTileAt(x: number, y: number, scale?: number): TileInfo {\r\n        let tile: TileInfo = {\r\n            id: 0\r\n        };\r\n\r\n        if (scale) {\r\n            let row: number = Math.floor(y / (this.tileHeight * scale));\r\n            let col: number = Math.floor(x / (this.tileWidth * scale));\r\n            let pos: number = (row * this.width) + col;\r\n            let tileData = this.layers[this.activeLayer].getTile(pos);\r\n\r\n            tile.id = tileData.tileid;\r\n            tile.row = tileData.row;\r\n            tile.col = tileData.col;\r\n            tile.collider = new Rectangle((this.tileWidth * scale) * col, (this.tileHeight * scale) * row, (this.tileWidth * scale), (this.tileHeight * scale));\r\n        } else {\r\n            let row: number = Math.floor(y / this.tileHeight);\r\n            let col: number = Math.floor(x / this.tileWidth);\r\n            let pos: number = (row * this.width) + col;\r\n            let tileData = this.layers[this.activeLayer].getTile(pos);\r\n\r\n            console.log(col, row, pos);\r\n\r\n            tile.id = tileData.tileid;\r\n            tile.row = tileData.row;\r\n            tile.col = tileData.col;\r\n            tile.collider = new Rectangle(this.tileWidth * col, this.tileHeight * row, this.tileWidth, this.tileHeight);\r\n        }\r\n\r\n        return tile;\r\n    }\r\n\r\n    public render(renderer: Renderer2d, x: number, y: number, scale?: number, scaleY?: number) {\r\n        for (let layer of this.layers) {\r\n            if (layer.isVisible()) {\r\n                for (let i in layer.tiles) {\r\n                    let tileData = layer.getTile(+i);\r\n                    let tileX: number = this.tileWidth * tileData.col + x;\r\n                    let tileY: number = this.tileHeight * tileData.row + y;\r\n\r\n                    if (tileData.tileid !== 0) {\r\n                        for (let j in this.tilesets) {\r\n                            if (tileData.tileid >= this.tilesets[j].firstgid && tileData.tileid <= this.tilesets[j].lastgid) {\r\n                                this.tilesets[j].renderTile(renderer, tileX, tileY, tileData.tileid);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public renderScale(renderer: Renderer2d, x: number, y: number, scale: number) {\r\n        for (let layer of this.layers) {\r\n            if (layer.isVisible()) {\r\n                for (let i in layer.tiles) {\r\n                    let tileData = layer.getTile(+i);\r\n                    let tileX: number = (this.tileWidth * scale) * tileData.col + x;\r\n                    let tileY: number = (this.tileHeight * scale) * tileData.row + y;\r\n\r\n                    if (tileData.tileid !== 0) {\r\n                        for (let j in this.tilesets) {\r\n                            if (tileData.tileid >= this.tilesets[j].firstgid && tileData.tileid <= this.tilesets[j].lastgid) {\r\n                                this.tilesets[j].renderTileScale(renderer, tileX, tileY, tileData.tileid, scale);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/tilemap.ts","export interface Tile {\r\n    tileid: number;\r\n    row: number;\r\n    col: number;\r\n}\r\n\r\nexport class TilemapLayer {\r\n    public tiles: number[] = [];\r\n    public data: string;\r\n    public encoding: string;\r\n    public width: number;\r\n    public height: number;\r\n    public x: number;\r\n    public y: number;\r\n    public opacity: number;\r\n    public visible: boolean;\r\n    public name: string;\r\n    public type: string;\r\n\r\n    constructor(data: string, encoding: string, width: number, height: number,\r\n        x: number, y: number, opacity: number, visible: boolean, name: string, type: string) {\r\n        this.data = data;\r\n        this.encoding = encoding;\r\n        this.height = height;\r\n        this.width = width;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.opacity = opacity;\r\n        this.visible = visible;\r\n        this.name = name;\r\n        this.type = type;\r\n\r\n        this.decode();\r\n    }\r\n\r\n    public decode() {\r\n        let rawData = atob(this.data);\r\n        let bytes: number = 4;\r\n        let length: number = rawData.length / bytes;\r\n\r\n        for (let i = 0; i < length; i += 1) {\r\n            this.tiles[i] = 0;\r\n\r\n            for (let j = bytes - 1; j >= 0; j -= 1) {\r\n                this.tiles[i] += rawData.charCodeAt((i * bytes) + j) << (j << 3);\r\n            }\r\n        }\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return this.visible;\r\n    }\r\n\r\n    public getTile(i: number): Tile {\r\n        return {\r\n            tileid: this.tiles[i],\r\n            row: Math.floor(i / this.width),\r\n            col: i % this.width\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/tilemap-layer.ts","import { Texture } from '../texture';\r\nimport { Renderer2d } from '../renderer2d/renderer2d';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\n\r\nexport class Tileset {\r\n    public gl: WebGLRenderingContext;\r\n    public texture: Texture;\r\n    public name: string;\r\n    public image: string;\r\n    public imageWidth: number;\r\n    public imageHeight: number;\r\n    public firstgid: number;\r\n    public lastgid: number;\r\n    public margin: number;\r\n    public spacing: number;\r\n    public columns: number;\r\n    public tileCount: number;\r\n    public tileWidth: number;\r\n    public tileHeight: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, name: string, image: string, imageWidth: number, imageHeight: number, firstgid: number,\r\n        margin: number, spacing: number, columns: number, tileCount: number, tileWidth: number, tileHeight: number) {\r\n        this.gl = gl;\r\n        this.name = name;\r\n        this.image = image;\r\n        this.imageWidth = imageWidth;\r\n        this.imageHeight = imageHeight;\r\n        this.firstgid = firstgid;\r\n        this.margin = margin;\r\n        this.spacing = spacing;\r\n        this.columns = columns;\r\n        this.tileCount = tileCount;\r\n        this.tileWidth = tileWidth;\r\n        this.tileHeight = tileHeight;\r\n\r\n        this.lastgid = this.firstgid + this.tileCount - 1;\r\n        this.texture = new Texture(this.gl, this.image);\r\n    }\r\n\r\n    public renderTile(renderer: Renderer2d, x: number, y: number, id: number): void {\r\n        let row: number = Math.floor((id - this.firstgid) / this.columns);\r\n        let col: number = (id - this.firstgid) % this.columns;\r\n\r\n        let uvs: number[] = [\r\n            ((col * this.tileWidth) / this.imageWidth),\r\n            ((row * this.tileHeight) / this.imageHeight),\r\n            (((col * this.tileWidth) + this.tileWidth) / this.imageWidth),\r\n            (((row * this.tileHeight) + this.tileHeight) / this.imageHeight)\r\n        ];\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [x, y,\r\n            x + this.tileWidth, y,\r\n            x, y + this.tileHeight,\r\n            x + this.tileWidth, y + this.tileHeight];\r\n        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderTileScale(renderer: Renderer2d, x: number, y: number, id: number, scale: number, scaleY?: number) {\r\n        let row: number = Math.floor((id - this.firstgid) / this.columns);\r\n        let col: number = (id - this.firstgid) % this.columns;\r\n\r\n        let uvs: number[] = [\r\n            ((col * this.tileWidth) / this.imageWidth),\r\n            ((row * this.tileHeight) / this.imageHeight),\r\n            (((col * this.tileWidth) + this.tileWidth) / this.imageWidth),\r\n            (((row * this.tileHeight) + this.tileHeight) / this.imageHeight)\r\n        ];\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [x, y,\r\n            x + this.tileWidth * scale, y,\r\n            x, y + this.tileHeight * scale,\r\n            x + this.tileWidth * scale, y + this.tileHeight * scale];\r\n        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderTileAngle(renderer: Renderer2d, x: number, y: number, id: number, angle: number, scale?: number, scaleY?: number) {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/tileset.ts","export class Tile {\r\n    constructor() {\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/tile.ts","import { Blur } from './blur';\r\nimport { Bloom } from './bloom';\r\n\r\nexport { Blur, Bloom }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/fx/index.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\nimport { FrameBuffer } from '../renderer2d/framebuffer';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute vec2 a_texCoord;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'\tv_texCoord = a_texCoord;\\n' +\r\n'}\\n';\r\n\r\n/* Blur Fragment shader\r\n * ===========================================================\r\n * GLSL Fragment Shader\r\n *  This source code is released under the MIT License.\r\n *  Copyright (c) 2015 Guilherme R. Lampert.\r\n * ===========================================================\r\n */\r\nconst blurFragmentShader = 'precision mediump float;\\n' +\r\n'uniform vec2  u_texel_size;\\n' +\r\n'uniform float u_blur_amount;\\n' +\r\n'uniform float u_blur_scale;\\n' +\r\n'uniform float u_blur_strength;\\n' +\r\n'uniform int u_horizontal;\\n' +\r\n'uniform sampler2D u_color_texture;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'const float BLUR_PASSES = 20.0;\\n' +\r\n'float gaussian(float x, float deviation) {\\n' +\r\n'\treturn (1.0 / sqrt(6.28318530718 * deviation)) * exp(-((x * x) / (2.0 * deviation)));\\n' +\r\n'}\\n' +\r\n'void main() {\\n' +\r\n'\tvec4  color = vec4(0.0);\\n' +\r\n'\tfloat half_blur = u_blur_amount * 0.5;\\n' +\r\n'\tfloat strength = 1.0 - u_blur_strength;\\n' +\r\n'\tfloat deviation = half_blur * 0.35;\\n' +\r\n'\tdeviation *= deviation;\\n' +\r\n'   if (u_horizontal == 1) {\\n' +\r\n'\t    for (float i = 0.0; i < BLUR_PASSES; i += 1.0) {\\n' +\r\n'\t\t    float offset = i - half_blur;\\n' +\r\n'\t\t    vec4 tex_color = texture2D(u_color_texture, v_texCoord +\\n' +\r\n'\t\t\t    vec2(offset * u_texel_size.x * u_blur_scale, 0.0)) * gaussian(offset * strength, deviation);\\n' +\r\n'\t\t    color += tex_color;\\n' +\r\n'\t    }\\n' +\r\n'   } else {\\n' +\r\n'       for (float i = 0.0; i < BLUR_PASSES; i += 1.0) {\\n' +\r\n'            float offset = i - half_blur;\\n' +\r\n'            vec4 tex_color = texture2D(u_color_texture, v_texCoord +\\n' +\r\n'                vec2(0.0, offset * u_texel_size.y * u_blur_scale)) * gaussian(offset * strength, deviation);\\n' +\r\n'            color += tex_color;\\n' +\r\n'        }\\n' +\r\n'   }\\n' +\r\n'\tgl_FragColor = clamp(color, 0.0, 1.0);\\n' +\r\n'}';\r\n\r\nexport class Blur {\r\n    public gl: WebGLRenderingContext;\r\n    public horizontalFBO: FrameBuffer;\r\n    public verticalFBO: FrameBuffer;\r\n    public texture: WebGLTexture;\r\n\r\n    public blurProgram: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public texelSize: WebGLUniformLocation;\r\n    public blurAmount: WebGLUniformLocation;\r\n    public blurScale: WebGLUniformLocation;\r\n    public blurStrength: WebGLUniformLocation;\r\n    public horizontal: WebGLUniformLocation;\r\n    public position: number;\r\n    public textureCoordinates: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public indexBuffer: WebGLBuffer;\r\n    public texCoordBuffer: WebGLBuffer;\r\n\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.blurProgram = new Program(this.gl);\r\n        this.blurProgram.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.blurProgram.loadShader(ShaderType.FRAGMENT, blurFragmentShader);\r\n        this.blurProgram.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.horizontalFBO = new FrameBuffer(gl, this.width, this.height);\r\n        this.verticalFBO = new FrameBuffer(gl, this.width, this.height);\r\n\r\n        this.texelSize = gl.getUniformLocation(this.blurProgram.program, 'u_texel_size');\r\n        this.blurAmount = gl.getUniformLocation(this.blurProgram.program, 'u_blur_amount');\r\n        this.blurScale = gl.getUniformLocation(this.blurProgram.program, 'u_blur_scale');\r\n        this.blurStrength = gl.getUniformLocation(this.blurProgram.program, 'u_blur_strength');\r\n        this.horizontal = gl.getUniformLocation(this.blurProgram.program, 'u_horizontal');\r\n\r\n        this.resolution = gl.getUniformLocation(this.blurProgram.program, 'u_resolution');\r\n        this.position = gl.getAttribLocation(this.blurProgram.program, 'a_position');\r\n        this.textureCoordinates = gl.getAttribLocation(this.blurProgram.program, 'a_texCoord');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.indexBuffer = gl.createBuffer();\r\n        this.texCoordBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public execute(texture: WebGLTexture): WebGLTexture {\r\n        let gl = this.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.horizontalFBO.fbo);\r\n\r\n        this.render(true, texture);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.verticalFBO.fbo);\r\n\r\n        this.render(false, this.horizontalFBO.texture);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return this.verticalFBO.texture;\r\n    }\r\n\r\n    public render(horizontal: boolean, texture: WebGLTexture): void {\r\n        let gl = this.gl;\r\n\r\n        let vertices = [0, 0, this.width, 0, 0, this.height, this.width, this.height];\r\n        let uvs = [\r\n            0, 0,\r\n            1, 0,\r\n            0, 1,\r\n            1, 1\r\n        ];\r\n        let indices = [0, 1, 2, 1, 2, 3];\r\n        let numIndices = 6;\r\n\r\n        gl.useProgram(this.blurProgram.program);\r\n\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.uniform2f(this.resolution, 800, 600);\r\n        gl.uniform2fv(this.texelSize, [(1.0 / this.width), (1.0 / this.height)]);\r\n        // gl.uniform2fv(this.texelSize, [1, 1]);\r\n        gl.uniform1f(this.blurAmount, 35.0);\r\n        gl.uniform1f(this.blurScale, 1.0);\r\n        gl.uniform1f(this.blurStrength, 0.2);\r\n\r\n        if (horizontal) {\r\n            gl.uniform1i(this.horizontal, 1);\r\n        } else {\r\n            gl.uniform1i(this.horizontal, 0);\r\n        }\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.position);\r\n        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(uvs), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.textureCoordinates);\r\n        gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n        gl.drawElements(gl.TRIANGLES, numIndices, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/fx/blur.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\nimport { FrameBuffer } from '../renderer2d/framebuffer';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute vec2 a_texCoord;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'\tv_texCoord = a_texCoord;\\n' +\r\n'}\\n';\r\n\r\n/* Combine fragment shader\r\n * ===========================================================\r\n * GLSL Fragment Shader\r\n *  This source code is released under the MIT License.\r\n *  Copyright (c) 2015 Guilherme R. Lampert.\r\n * ===========================================================\r\n */\r\nconst combineFragmentShader = 'precision mediump float;\\n' +\r\n'uniform float u_blend_mode;\\n' +\r\n'uniform sampler2D u_scene_texture;\\n' +\r\n'uniform sampler2D u_glow_texture;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'const float ADDITIVE_BLENDING = 1.0;\\n' +\r\n'const float SCREEN_BLENDING   = 2.0;\\n' +\r\n'void main() {\\n' +\r\n'\tvec4 dst = texture2D(u_scene_texture, v_texCoord); // Rendered scene (tmu:0)\\n' +\r\n'\tvec4 src = texture2D(u_glow_texture,  v_texCoord); // Glow map       (tmu:1)\\n' +\r\n'\tif (u_blend_mode == ADDITIVE_BLENDING) {\\n' +\r\n'\t\t// Additive blending (strong result, high overexposure).\\n' +\r\n'\t\tgl_FragColor = min(src + dst, 1.0);\\n' +\r\n'\t} else if (u_blend_mode == SCREEN_BLENDING) {\\n' +\r\n'\t\t// Screen blending (mild result, medium overexposure).\\n' +\r\n'\t\tgl_FragColor = clamp((src + dst) - (src * dst), 0.0, 1.0);\\n' +\r\n'\t} else {\\n' +\r\n'\t\t// Show the glow map instead (DISPLAY_GLOWMAP).\\n' +\r\n'\t\tgl_FragColor = src;\\n' +\r\n'\t}\\n' +\r\n'}';\r\n\r\nexport class Bloom {\r\n    public gl: WebGLRenderingContext;\r\n    public glowFramebuffer: FrameBuffer;\r\n    public combinationProgram: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public blendMode: WebGLUniformLocation;\r\n    public position: number;\r\n    public textureCoordinates: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public indexBuffer: WebGLBuffer;\r\n    public texCoordBuffer: WebGLBuffer;\r\n\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.combinationProgram = new Program(this.gl);\r\n        this.combinationProgram.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.combinationProgram.loadShader(ShaderType.FRAGMENT, combineFragmentShader);\r\n        this.combinationProgram.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.glowFramebuffer = new FrameBuffer(gl, this.width, this.height);\r\n\r\n        this.blendMode = gl.getUniformLocation(this.combinationProgram.program, 'u_blend_mode');\r\n        this.resolution = gl.getUniformLocation(this.combinationProgram.program, 'u_resolution');\r\n        this.position = gl.getAttribLocation(this.combinationProgram.program, 'a_position');\r\n        this.textureCoordinates = gl.getAttribLocation(this.combinationProgram.program, 'a_texCoord');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.indexBuffer = gl.createBuffer();\r\n        this.texCoordBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public execute(src: WebGLTexture, dst: WebGLTexture): WebGLTexture {\r\n        let gl = this.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.glowFramebuffer.fbo);\r\n\r\n        this.render(dst, src);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return this.glowFramebuffer.texture;\r\n    }\r\n\r\n    public render(src: WebGLTexture, dst: WebGLTexture): void {\r\n        let gl = this.gl;\r\n\r\n        let vertices = [0, 0, this.width, 0, 0, this.height, this.width, this.height];\r\n        let uvs = [\r\n            0, 0,\r\n            1, 0,\r\n            0, 1,\r\n            1, 1\r\n        ];\r\n        let indices = [0, 1, 2, 1, 2, 3];\r\n        let numIndices = 6;\r\n\r\n        gl.useProgram(this.combinationProgram.program);\r\n\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.uniform2f(this.resolution, 800, 600);\r\n        gl.uniform1f(this.blendMode, 1.0);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, src);\r\n\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, dst);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.position);\r\n        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(uvs), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.textureCoordinates);\r\n        gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n        gl.drawElements(gl.TRIANGLES, numIndices, gl.UNSIGNED_SHORT, 0);\r\n        gl.bindTexture(gl.TEXTURE_2D, dst);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/fx/bloom.ts","import { Texture } from './texture';\r\nimport { Renderer2d } from './renderer2d/renderer2d';\r\nimport { RenderCall } from './renderer2d/render-call';\r\nimport { Vector2 } from '../geometry/vector2d';\r\nimport { degreeToRadian } from '../utility/angle';\r\n\r\nexport class Sprite {\r\n    public uv: number[];\r\n    public width: number;\r\n    public height: number;\r\n    public texture: Texture;\r\n\r\n    constructor(texture?: Texture, width?: number, height?: number, uv?: number[]) {\r\n        if (texture) {\r\n            this.texture = texture;\r\n        }\r\n\r\n        if (width && height) {\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n\r\n        if (uv) {\r\n            this.setUVByPixels(uv[0], uv[1], uv[2], uv[3]);\r\n        }\r\n    }\r\n\r\n    public setUV(x0: number, y0: number, x1: number, y1: number): void {\r\n        this.uv = [x0, y0, x1, y1];\r\n    }\r\n\r\n    public setUVByPixels(x: number, y: number, width: number, height: number): void {\r\n        this.uv = [(x / this.texture.width), (y / this.texture.height), ((x + width) / this.texture.width), ((y + height) / this.texture.height)];\r\n    }\r\n\r\n    public render(renderer: Renderer2d, x: number, y: number): void {\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [x, y, x + this.width, y, x, y + this.height, x + this.width, y + this.height];\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderScale(renderer: Renderer2d, x: number, y: number, scale: number, scaleY?: number): void {\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        if (scaleY) {\r\n            renderCall.vertices = [x, y,\r\n                x + (this.width * scaleY), y,\r\n                x, y + (this.height * scale),\r\n                x + (this.width * scaleY), y + (this.height * scale)];\r\n        } else {\r\n            renderCall.vertices = [x, y,\r\n                x + (this.width * scale), y,\r\n                x, y + (this.height * scale),\r\n                x + (this.width * scale), y + (this.height * scale)];\r\n        }\r\n\r\n        renderCall.texture = this.texture.texture;\r\n\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderAngle(renderer: Renderer2d, x: number, y: number, angle: number): void {\r\n        let vec: Vector2[] = [];\r\n        let px: number = x + (this.width / 2);\r\n        let py: number = y + (this.height / 2);\r\n\r\n        vec[0] = new Vector2(x, y);\r\n        vec[1] = new Vector2(x + this.width, y);\r\n        vec[2] = new Vector2(x, y + this.height);\r\n        vec[3] = new Vector2(x + this.width, y + this.height);\r\n\r\n        for (let vector in vec) {\r\n            vec[vector] = vec[vector].rotatePivot(px, py, degreeToRadian(angle));\r\n        }\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [vec[0].x, vec[0].y,\r\n            vec[1].x, vec[1].y,\r\n            vec[2].x, vec[2].y,\r\n            vec[3].x, vec[3].y];\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderAngleScale(renderer: Renderer2d, x: number, y: number, angle: number, scale: number, scaleY?: number): void {\r\n        let vec: Vector2[] = [];\r\n        let px: number = x + ((this.width * scale) / 2);\r\n        let py: number = y + ((this.height * scale) / 2);\r\n\r\n        if (scaleY) {\r\n            vec[0] = new Vector2(x, y);\r\n            vec[1] = new Vector2(x + (this.width * scale), y);\r\n            vec[2] = new Vector2(x, y + (this.height * scaleY));\r\n            vec[3] = new Vector2(x + (this.width * scale), y + (this.height * scaleY));\r\n        } else {\r\n            vec[0] = new Vector2(x, y);\r\n            vec[1] = new Vector2(x + (this.width * scale), y);\r\n            vec[2] = new Vector2(x, y + (this.height * scale));\r\n            vec[3] = new Vector2(x + (this.width * scale), y + (this.height * scale));\r\n        }\r\n\r\n        for (let vector in vec) {\r\n            vec[vector] = vec[vector].rotatePivot(px, py, degreeToRadian(angle));\r\n        }\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [vec[0].x, vec[0].y,\r\n            vec[1].x, vec[1].y,\r\n            vec[2].x, vec[2].y,\r\n            vec[3].x, vec[3].y];\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderFBO(renderer: Renderer2d) {\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [0, this.height, this.width, this.height, 0, 0, this.width, 0];\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/sprite.ts","import { Sprite } from './sprite';\r\nimport { Renderer2d } from './renderer2d/renderer2d';\r\n\r\nexport interface Animations {\r\n    [index: string]: AnimatedSprite;\r\n}\r\n\r\nexport class AnimatedSprite {\r\n    public frames: Sprite[] = [];\r\n    public loop: boolean = false;\r\n    public active: boolean = true;\r\n    public timePerFrame: number = 100;\r\n    public currentFrame: number = 0;\r\n    public currentDelta: number = 0;\r\n\r\n    constructor(frames?: Sprite[], loop?: boolean, timePerFrame?: number) {\r\n        if (frames) {\r\n            this.frames = frames;\r\n        }\r\n\r\n        if (loop) {\r\n            this.loop = loop;\r\n        }\r\n\r\n        if (timePerFrame) {\r\n            this.timePerFrame = timePerFrame;\r\n        }\r\n    }\r\n\r\n    public play(): void {\r\n        this.active = true;\r\n    }\r\n\r\n    public stop(): void {\r\n        this.active = false;\r\n        this.currentFrame = 0;\r\n        this.currentDelta = 0;\r\n    }\r\n\r\n    public pause(): void {\r\n        this.active = false;\r\n    }\r\n\r\n    public nextFrame(): void {\r\n        this.currentFrame += 1;\r\n\r\n        if (this.currentFrame >= this.frames.length) {\r\n            if (!this.loop) {\r\n                this.active = false;\r\n            }\r\n            this.currentFrame = 0;\r\n        }\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        if (this.active) {\r\n            this.currentDelta += delta;\r\n\r\n            if (this.currentDelta > this.timePerFrame) {\r\n                this.currentDelta = 0;\r\n                this.nextFrame();\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(renderer: Renderer2d, x: number, y: number): void {\r\n        this.frames[this.currentFrame].render(renderer, x, y);\r\n    }\r\n\r\n    public renderScale(renderer: Renderer2d, x: number, y: number, scale: number, scaleY?: number): void {\r\n        if (scaleY) {\r\n            this.frames[this.currentFrame].renderScale(renderer, x, y, scale, scaleY);\r\n        } else {\r\n            this.frames[this.currentFrame].renderScale(renderer, x, y, scale);\r\n        }\r\n    }\r\n\r\n    public renderAngle(renderer: Renderer2d, x: number, y: number, angle: number): void {\r\n        this.frames[this.currentFrame].renderAngle(renderer, x, y, angle);\r\n    }\r\n\r\n    public renderAngleScale(renderer: Renderer2d, x: number, y: number, angle: number, scale: number, scaleY?: number): void {\r\n        if (scaleY) {\r\n            this.frames[this.currentFrame].renderAngleScale(renderer, x, y, angle, scale, scaleY);\r\n        } else {\r\n            this.frames[this.currentFrame].renderAngleScale(renderer, x, y, angle, scale);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/animated-sprite.ts","import { Sample } from './sample';\r\nimport { Track } from './track';\r\n\r\nexport { Sample, Track }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/audio/index.ts","import { ResourceManager } from '../utility/resource-manager';\r\n\r\nexport class Sample {\r\n    public url: string;\r\n    public sample: HTMLAudioElement;\r\n    public length: number;\r\n    public loaded: boolean = false;\r\n    private resourceManager: ResourceManager;\r\n\r\n    constructor(url: string) {\r\n        if (url) {\r\n            this.url = url;\r\n            this.load(url);\r\n        }\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n    }\r\n\r\n    public load(url: string): void {\r\n        let _this = this;\r\n        this.sample = new Audio();\r\n        this.sample.src = url;\r\n\r\n        this.resourceManager.addAudio();\r\n\r\n        this.sample.addEventListener('load', (event) => {\r\n            _this.loadHandler(event);\r\n        });\r\n        this.sample.addEventListener('error', _this.errorHandler);\r\n    }\r\n\r\n    public play(): void {\r\n        this.sample.currentTime = 0;\r\n        this.sample.play();\r\n    }\r\n\r\n    public pause(): void {\r\n        this.sample.pause();\r\n    }\r\n\r\n    public stop(): void {\r\n        this.sample.pause();\r\n        this.sample.currentTime = 0;\r\n    }\r\n\r\n    public seek(time: number) {\r\n        this.sample.currentTime = time;\r\n    }\r\n\r\n    public setSpeed(speed: number) {\r\n        this.sample.playbackRate = speed;\r\n    }\r\n\r\n    public getSpeed(): number {\r\n        return this.sample.playbackRate;\r\n    }\r\n\r\n    public loadHandler(event: Event) {\r\n        this.loaded = true;\r\n        this.length = this.sample.duration;\r\n\r\n        this.resourceManager.audioReady();\r\n    }\r\n\r\n    public errorHandler(event: Event) {\r\n        this.resourceManager.audioFailed();\r\n\r\n        throw new Error('Failed to load audio resource.');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/audio/sample.ts","import { ResourceManager } from '../utility/resource-manager';\r\n\r\nexport class Track {\r\n    public url: string;\r\n    public track: HTMLAudioElement;\r\n    public length: number;\r\n    public loop: boolean = false;\r\n    public loaded: boolean = false;\r\n    private resourceManager: ResourceManager;\r\n\r\n    constructor(url: string) {\r\n        if (url) {\r\n            this.url = url;\r\n            this.load(url);\r\n        }\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n    }\r\n\r\n    public load(url: string): void {\r\n        let _this = this;\r\n        this.track = new Audio();\r\n        this.track.src = url;\r\n\r\n        this.resourceManager.addAudio();\r\n\r\n        this.track.addEventListener('load', (event) => {\r\n            _this.loadHandler(event);\r\n        });\r\n        this.track.addEventListener('error', _this.errorHandler);\r\n    }\r\n\r\n    public play(): void {\r\n        this.track.play();\r\n    }\r\n\r\n    public pause(): void {\r\n        this.track.pause();\r\n    }\r\n\r\n    public stop(): void {\r\n        this.track.pause();\r\n        this.track.currentTime = 0;\r\n    }\r\n\r\n    public seek(time: number) {\r\n        this.track.currentTime = time;\r\n    }\r\n\r\n    public setSpeed(speed: number) {\r\n        this.track.playbackRate = speed;\r\n    }\r\n\r\n    public getSpeed(): number {\r\n        return this.track.playbackRate;\r\n    }\r\n\r\n    public setLoopable(loop: boolean): void {\r\n        this.loop = loop;\r\n    }\r\n\r\n    public loadHandler(event: Event) {\r\n        this.loaded = true;\r\n        this.length = this.track.duration;\r\n\r\n        this.resourceManager.audioReady();\r\n    }\r\n\r\n    public errorHandler(event: Event) {\r\n        this.resourceManager.audioFailed();\r\n\r\n        throw new Error('Failed to load audio resource.');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/audio/track.ts","import * as AStar from './astar/index';\r\n\r\nexport { AStar }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/index.ts","import { Connection } from './connection';\r\nimport { Graph } from './graph';\r\nimport { Heuristic } from './heuristic';\r\nimport { NodeList } from './node-list';\r\nimport { NodeRecord } from './node-record';\r\nimport { Node } from './node';\r\nimport { PathFinder } from './path-finder';\r\n\r\nexport { Connection, Graph, Heuristic, NodeList, NodeRecord, Node, PathFinder }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/index.ts","import { Node } from './node';\r\n\r\nexport class Connection {\r\n    public cost: number;\r\n    public srcNode: Node;\r\n    public dstNode: Node;\r\n\r\n    constructor(srcNode?: Node, dstNode?: Node) {\r\n        if (srcNode) {\r\n            this.srcNode = srcNode;\r\n        }\r\n\r\n        if (dstNode) {\r\n            this.dstNode = dstNode;\r\n        }\r\n    }\r\n\r\n    public setCost(cost: number): void {\r\n        this.cost = cost;\r\n    }\r\n\r\n    public getCost(): number {\r\n        return this.cost;\r\n    }\r\n\r\n    public setSrcNode(srcNode: Node) {\r\n        this.srcNode = srcNode;\r\n    }\r\n\r\n    public getSrcNode(): Node {\r\n        return this.srcNode;\r\n    }\r\n\r\n    public setDstNode(dstNode: Node) {\r\n        this.dstNode = dstNode;\r\n    }\r\n\r\n    public getDstNode(): Node {\r\n        return this.dstNode;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/connection.ts","import { Node } from './node';\r\nimport { Connection } from './connection';\r\n\r\nexport class Graph {\r\n    public nodes: Node[][];\r\n\r\n    constructor(nodes: Node[][]) {\r\n        if (nodes) {\r\n            this.nodes = nodes;\r\n        }\r\n    }\r\n\r\n    public setNodes(nodes: Node[][]): void {\r\n        this.nodes = nodes;\r\n    }\r\n\r\n    public isValidNode(x: number, y: number): boolean {\r\n        if ( x < 0 || y < 0 || y >= this.nodes.length || x >= this.nodes[0].length) {\r\n            return false;\r\n        } else if (this.nodes[y][x].getBlocked()) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public getNode(node: Node): Node {\r\n        return this.nodes[node.y][node.x];\r\n    }\r\n\r\n    public getConnections(srcNode: Node): Connection[] {\r\n        let connections: Connection[] = [];\r\n        let tempConnection: Connection;\r\n\r\n        // TODO: Need to rewrite this to handle the 1D tilemap structure of tiled format.\r\n        for (let i = -1; i < 2; i += 1) {\r\n            for (let j = -1; j < 2; j += 1) {\r\n                if (i === 0 && j === 0) {\r\n                    continue;\r\n                } else if (this.isValidNode(srcNode.x + i, srcNode.y + j)) {\r\n                    tempConnection = new Connection();\r\n\r\n                    tempConnection.setSrcNode(srcNode);\r\n                    tempConnection.setDstNode(this.nodes[srcNode.y + j][srcNode.x + i]);\r\n                    tempConnection.setCost(1);\r\n\r\n                    connections.push(tempConnection);\r\n                }\r\n            }\r\n        }\r\n\r\n        return connections;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/graph.ts","import { Node } from './node';\r\n\r\nexport class Heuristic {\r\n    public dstNode: Node;\r\n\r\n    constructor(dstNode: Node) {\r\n        this.dstNode = dstNode;\r\n    }\r\n\r\n    public euclideanDistance(currentNode: Node): number {\r\n        let dx = currentNode.x - this.dstNode.x;\r\n        let dy = currentNode.y - this.dstNode.y;\r\n\r\n        return Math.sqrt((dx * dx) + (dy * dy));\r\n    }\r\n\r\n    public manhattanDistance(currentNode: Node): number {\r\n        let dx = Math.abs(this.dstNode.x - currentNode.x);\r\n        let dy = Math.abs(this.dstNode.y - currentNode.y);\r\n\r\n        return dx + dy;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/heuristic.ts","import { Node } from './node';\r\nimport { NodeRecord } from './node-record';\r\n\r\nexport class NodeList {\r\n    public list: NodeRecord[] = [];\r\n\r\n    constructor() { }\r\n\r\n    public add(nodeRecord: NodeRecord): void {\r\n        this.list.push(nodeRecord);\r\n    }\r\n\r\n    public get(index: number): NodeRecord {\r\n        return this.list[index];\r\n    }\r\n\r\n    public getSmallest(): NodeRecord {\r\n        let smallest: NodeRecord;\r\n        let current: NodeRecord;\r\n\r\n        smallest = this.list[0];\r\n\r\n        for (let i = 0; i < this.list.length; i += 1) {\r\n            current = this.list[i];\r\n\r\n            if (current.getEstimatedCost() < smallest.getEstimatedCost()) {\r\n                smallest = current;\r\n            }\r\n        }\r\n\r\n        return smallest;\r\n    }\r\n\r\n    public contains(node: Node): boolean {\r\n        let current: Node;\r\n\r\n        for (let i = 0; i < this.list.length; i += 1) {\r\n            current = this.list[i].getNode();\r\n\r\n            if (current.x === node.x && current.y === node.y) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public find(node: Node): NodeRecord {\r\n        let current: Node;\r\n\r\n        for (let i = 0; i < this.list.length; i += 1) {\r\n            current = this.list[i].getNode();\r\n\r\n            if (current.x === node.x && current.y === node.y) {\r\n                return this.list[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    public remove(node: Node): void {\r\n        let current: Node;\r\n\r\n        for (let i = 0; i < this.list.length; i += 1) {\r\n            current = this.list[i].getNode();\r\n\r\n            if (current.x === node.x && current.y === node.y) {\r\n                this.list.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public size(): number {\r\n        return this.list.length;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/node-list.ts","import { Node } from './node';\r\nimport { Connection } from './connection';\r\n\r\nexport class NodeRecord {\r\n    public node: Node;\r\n    public connection: Connection;\r\n    public currentCost: number = 0;\r\n    public estimatedCost: number = 0;\r\n\r\n    constructor() {\r\n        this.currentCost = 0;\r\n        this.estimatedCost = 0;\r\n    }\r\n\r\n    public setNode(node: Node): void {\r\n        this.node = node;\r\n    }\r\n\r\n    public getNode(): Node {\r\n        return this.node;\r\n    }\r\n\r\n    public setConnection(connection: Connection): void {\r\n        this.connection = connection;\r\n    }\r\n\r\n    public getConnection(): Connection {\r\n        return this.connection;\r\n    }\r\n\r\n    public setCurrentCost(cost: number): void {\r\n        this.currentCost = cost;\r\n    }\r\n\r\n    public getCurrentCost(): number {\r\n        return this.currentCost;\r\n    }\r\n\r\n    public setEstimatedCost(estimatedCost: number): void {\r\n        this.estimatedCost = estimatedCost;\r\n    }\r\n\r\n    public getEstimatedCost(): number {\r\n        return this.estimatedCost;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/node-record.ts","export class Node {\r\n    public x: number;\r\n    public y: number;\r\n    public blocked: boolean = false;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public setBlocked(blocked: boolean): void {\r\n        this.blocked = blocked;\r\n    }\r\n\r\n    public getBlocked(): boolean {\r\n        return this.blocked;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/node.ts","import { Node } from './node';\r\nimport { NodeRecord } from './node-record';\r\nimport { NodeList } from './node-list';\r\nimport { Heuristic } from './heuristic';\r\nimport { Connection } from './connection';\r\nimport { Graph } from './graph';\r\nimport { TilemapLayer } from '../../gl/tilemap/tilemap-layer';\r\n\r\nexport class PathFinder {\r\n    public startRecord: NodeRecord;\r\n    public open: NodeList;\r\n    public closed: NodeList;\r\n    public heuristic: Heuristic;\r\n    public graph: Graph;\r\n\r\n    constructor() {\r\n        this.startRecord = new NodeRecord();\r\n        this.open = new NodeList();\r\n        this.closed = new NodeList();\r\n    }\r\n\r\n    public generatePathData(map: TilemapLayer, closed: number[]) {\r\n        let nodes: Node[][] = [];\r\n\r\n        for (let i = 0; i < map.height; i += 1) {\r\n            nodes[i] = [];\r\n            for (let j = 0; j < map.width; j += 1) {\r\n                let blocked = closed.indexOf(map.tiles[(i * map.width) + j]) !== -1;\r\n                nodes[i][j] = new Node(j, i);\r\n                nodes[i][j].setBlocked(blocked);\r\n            }\r\n        }\r\n\r\n        this.graph = new Graph(nodes);\r\n    }\r\n\r\n    public findPath(startNode: Node, endNode: Node): Node[] {\r\n        let path: Node[] = [];\r\n        let current: NodeRecord;\r\n        let connections: Connection[] = [];\r\n        let end: Node;\r\n        let endNodeCost: number;\r\n        let endNodeRecord: NodeRecord;\r\n        let endNodeHeuristic: number;\r\n\r\n        this.startRecord = new NodeRecord();\r\n        this.open = new NodeList();\r\n        this.closed = new NodeList();\r\n\r\n        this.heuristic = new Heuristic(endNode);\r\n\r\n        if (this.graph.getNode(endNode).blocked) {\r\n            return null;\r\n        }\r\n\r\n        this.startRecord.setNode(this.graph.getNode(startNode));\r\n        this.startRecord.setEstimatedCost(this.heuristic.euclideanDistance(this.startRecord.getNode()));\r\n\r\n        this.open.add(this.startRecord);\r\n\r\n        while (this.open.size() > 0) {\r\n            current = this.open.getSmallest();\r\n\r\n            if (current.node.x === endNode.x && current.node.y === endNode.y) {\r\n                break;\r\n            }\r\n\r\n            connections = this.graph.getConnections(current.getNode());\r\n\r\n            for (let i = 0; i < connections.length; i += 1) {\r\n                end = connections[i].getDstNode();\r\n                endNodeCost = current.getCurrentCost() + connections[i].getCost();\r\n\r\n                if (this.closed.contains(end)) {\r\n                    endNodeRecord = this.closed.find(end);\r\n\r\n                    if (endNodeRecord.getCurrentCost() <= endNodeCost) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.closed.remove(endNodeRecord.getNode());\r\n                    endNodeHeuristic = endNodeRecord.getEstimatedCost() - endNodeRecord.getCurrentCost();\r\n                } else if (this.open.contains(end)) {\r\n                    endNodeRecord = this.open.find(end);\r\n\r\n                    if (endNodeRecord.getCurrentCost() <= endNodeCost) {\r\n                        continue;\r\n                    }\r\n\r\n                    endNodeHeuristic = endNodeRecord.getEstimatedCost() - endNodeRecord.getCurrentCost();\r\n                } else {\r\n                    endNodeRecord = new NodeRecord();\r\n                    endNodeRecord.setNode(end);\r\n\r\n                    endNodeHeuristic = this.heuristic.euclideanDistance(end);\r\n                }\r\n\r\n                endNodeRecord.setCurrentCost(endNodeCost);\r\n                endNodeRecord.setConnection(connections[i]);\r\n                endNodeRecord.setEstimatedCost(endNodeCost + endNodeHeuristic);\r\n\r\n                if (!this.open.contains(end)) {\r\n                    this.open.add(endNodeRecord);\r\n                }\r\n            }\r\n\r\n            this.open.remove(current.getNode());\r\n            this.closed.add(current);\r\n        }\r\n\r\n        if (!(current.node.x === endNode.x && current.node.y === endNode.y)) {\r\n            return null;\r\n        } else {\r\n            while (!(current.node.x === startNode.x && current.node.y === startNode.y)) {\r\n                path.push(current.connection.getDstNode());\r\n                current = this.closed.find(current.connection.getSrcNode());\r\n            }\r\n        }\r\n\r\n        return path;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/path-finder.ts","import { Surface2d } from './graphics/surface2d';\r\nimport { Surface3d } from './graphics/surface3d';\r\nimport { Color } from './graphics/color';\r\nimport { Application } from './application';\r\n\r\ninterface SurfaceList {\r\n    [index: string]: Surface2d | Surface3d;\r\n}\r\n\r\nexport class Scene {\r\n    public surfaces: SurfaceList = {};\r\n    public render: (delta: number) => void;\r\n    public update: (delta: number) => void;\r\n\r\n    private application: Application;\r\n\r\n    constructor(application: Application) {\r\n        this.application = application;\r\n    }\r\n\r\n    public add3dSurface(id: string) {\r\n        this.surfaces[id] = new Surface3d(this.application.width, this.application.height, id);\r\n    }\r\n\r\n    public add2dSurface(id: string) {\r\n        this.surfaces[id] = new Surface2d(this.application.width, this.application.height, id);\r\n    }\r\n\r\n    public getContext(id: string) {\r\n        return this.surfaces[id].getContext();\r\n    }\r\n\r\n    public clear(id: string, color?: Color) {\r\n        if (color) {\r\n            this.surfaces[id].clear(color);\r\n        } else {\r\n            this.surfaces[id].clear();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/scene.ts","import { SceneManager } from './scene-manager';\r\n\r\nexport class Application {\r\n    public sceneManager: SceneManager;\r\n    public active: boolean = true;\r\n    public applicationTimer: number;\r\n    public targetFps: number = 30;\r\n    public delta: number;\r\n    public lastDelta: number;\r\n    public lastUpdate: number;\r\n    public fps: number;\r\n    public frames: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(width: number, height: number, targetFps?: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        if (targetFps) {\r\n            this.targetFps = targetFps;\r\n        }\r\n\r\n        this.sceneManager = new SceneManager(this);\r\n    }\r\n\r\n    public init(): void {\r\n        this.lastDelta = new Date().getTime();\r\n\r\n        this.start();\r\n    }\r\n\r\n    public start(): void {\r\n        this.applicationTimer = window.setInterval(() => {\r\n            this.update();\r\n        }, (1000 / this.targetFps));\r\n    }\r\n\r\n    public stop(): void {\r\n        window.clearInterval(this.applicationTimer);\r\n    }\r\n\r\n    public step(): void {\r\n        this.update();\r\n    }\r\n\r\n    public update(): void {\r\n        let now = new Date().getTime();\r\n        let delta = now - this.lastDelta;\r\n        this.lastDelta = now;\r\n\r\n        if (now - this.lastUpdate > 1000) {\r\n            this.fps = this.frames;\r\n            this.frames = 0;\r\n            this.lastUpdate = now;\r\n        } else {\r\n            this.frames += 1;\r\n        }\r\n\r\n        this.sceneManager.update(delta);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/application.ts","import { Scene } from './scene';\r\nimport { Application } from './application';\r\n\r\ninterface SceneList {\r\n    [index: string]: Scene;\r\n}\r\n\r\nexport class SceneManager {\r\n    public scenes: SceneList = {};\r\n    public activeScene: string;\r\n\r\n    private application: Application;\r\n\r\n    constructor(application: Application) {\r\n        this.application = application;\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        if (this.activeScene) {\r\n            this.scenes[this.activeScene].update(delta);\r\n            this.scenes[this.activeScene].render(delta);\r\n        }\r\n    }\r\n\r\n    public addScene(id: string): Scene {\r\n        if (this.scenes[id] !== undefined) {\r\n            throw new Error('Scene with id: ' + id + ' already exists.');\r\n        }\r\n\r\n        this.scenes[id] = new Scene(this.application);\r\n\r\n        if (!this.activeScene) {\r\n            this.activeScene = id;\r\n        }\r\n\r\n        return this.scenes[id];\r\n    }\r\n\r\n    public removeScene(id: string): void {\r\n        delete this.scenes[id];\r\n\r\n        if (this.activeScene === id) {\r\n            this.activeScene = this.getFirstScene();\r\n        }\r\n    }\r\n\r\n    public getScene(id: string): Scene {\r\n        if (this.scenes[id] === undefined) {\r\n            throw new Error('Scene with id: ' + id + ' is undefined.');\r\n        }\r\n\r\n        return this.scenes[id];\r\n    }\r\n\r\n    public setActiveScene(id: string): void {\r\n        if (this.scenes[id] === undefined) {\r\n            throw new Error('Scene with id: ' + id + ' is undefined.');\r\n        }\r\n\r\n        this.activeScene = id;\r\n    }\r\n\r\n    public getFirstScene(): string {\r\n        for (let scene in this.scenes) {\r\n            return scene;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/scene-manager.ts"],"sourceRoot":""}